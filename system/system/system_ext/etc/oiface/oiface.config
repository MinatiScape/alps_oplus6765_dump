{
    "default": {
        "gpu_freq_table_path": "/sys/devices/platform/soc/5000000.qcom,kgsl-3d0/kgsl/kgsl-3d0/freq_table_mhz",
        "gpu_freq_stat_path": "/sys/devices/platform/soc/5000000.qcom,kgsl-3d0/kgsl/kgsl-3d0/gpu_clock_stats",
        "devid_whitelist": ["com.coloros.digitalwellbeing", "com.coloros.assistantscreen", "com.oppo.launcher", "com.nearme.instant.platform", "com.coloros.gamespace"],
        "callback_whitelist": ["com.coloros.gamespace", "com.coloros.gamespaceui", "com.color.oifacetest"],
        "loglevel_whitelist": ["com.coloros.gamespace", "com.color.oifacetest"],

        "thermal_list": {
            "skin":"mtktsAP,quiet-therm-adc",
            "battery":"mtktsbattery,battery",
            "cpu":"mtktscpu,dual-gold-max-step"
        },
        "general": {
            "enable": 1,
            "org.cocos2dx.cpp_tests": {
                "enable": 1,
                "type": 3
            },
            "com.pokercity.bydrqp.nearme.gamecenter": {
                "enable": 1,
                "type": 2
            }
        },
        "oiface": {
            "enable": 48959
        },
        "oifaceim": {
            "enable": 4294967295,
            "com.tencent.mm": {
                "scene301": [ 12, 2000 ],
                "scene401": [ 15, 3000 ]
            }
        },
        "oifacegame": {
            "enable": 4294967295,
            "com.tencent.tmgp.sgame": {
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.tmgp.sgame/com.tencent.tmgp.sgame.SGameActivity#0"
            },
            "com.tencent.tmgp.sgamece": {
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.tmgp.sgamece/com.tencent.tmgp.sgamece.SGameActivity#0"
            },
            "com.ngame.allstar.eu": {
                "has_start_signal":1,
                "layer": "SurfaceView - com.ngame.allstar.eu/com.ngame.allstar.SGameRealActivity#0"
            },
            "com.garena.game.kgtw": {
                "has_start_signal":1,
                "layer": "SurfaceView - com.garena.game.kgtw/com.garena.game.kgtw.SGameRealActivity#0"
            },
            "com.tencent.tmgp.cf": {
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.tmgp.cf/com.tencent.tmgp.cf.AFMainActivity#0"
            }
        },
        "engine_boost": {
            "enable":0,
            "rules": "print ^80; print _80; if(_80 == 10 && ^80 != 10) { decision(1,15,10000,0,0); } if(_80 == 11 && ^80 != 11) { decision(1,15,0,0,0); } if(^80 == 20 || ^80 == 30 || ^80 == 40 || ^80 == 50){ decision(1,15,1000,0,0); }"
        },
        "sdk" : {
            "enable": 1,
            "connectionless": {
                "com.sixjoy.warsong1": {
                    "enable":0,
                    "rules": "if (_fg == 1) {decision(10,18,0,0,0);}"
                }
            },
            "com.tencent.lolm": {
                "enable": 1
            },
            "com.riotgames.league.wildrift": {
                "enable": 1
            },
            "com.riotgames.internal.wildrift.trunk": {
                "enable": 1
            },
            "com.riotgames.internal.wildrift.test": {
                "enable": 1
            },
            "com.riotgames.league.wildriftvn": {
                "enable": 1
            },
            "com.riotgames.league.wildrifttw": {
                "enable": 1
            },
            "com.tencent.tmgp.cf": {
                "enable": 1,
                "layer": "SurfaceView - com.tencent.tmgp.cf/com.tencent.tmgp.cf.AFMainActivity#0"
            },
            "com.tencent.tmgp.NBA": {
                "enable": 1,
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId !=7) && (_sceneId == 7)) { ; } if ((^sceneId == 7) && (_sceneId != 7) && (_sceneId != -1)) { ; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId == 7) && (^fps > 25) && (_fps <= 25) && (_fps != -1)) { decision(1, 12, 3000, 0, 0); }"
            },
            "com.taobao.taobao":{
                "enable":1,
                "rules": "print ^sceneId; print _sceneId; if ((_sceneId == 1) && (^sceneId == -1)) { decision(1,13,3000,0,0); } if ((_sceneId == 2)) { decision(1,12,1000,0,0); } if (((_sceneId == 3) && (^sceneId != 3)) || ((_sceneId == 5) && (^sceneId != 5)) || ((_sceneId == 6) && (^sceneId !=6)) || ((_sceneId == 7) && (^sceneId != 7)) || ((_sceneId == 18) && (^sceneId != 18))) { decision(1,12,1000,0,0); } if ((_sceneId == 8)) { decision(1,12,2000,0,0); } if ((_sceneId == 10)) { decision(1,12,1000,0,0); } if ((_sceneId == 12)) { decision(1,12,500,0,0); } if ((_sceneId == 13)) { decision(1,12,500,0,0); } if ((_sceneId == 14)) { decision(1,12,500,0,0); } if ((_sceneId == 16)) { decision(1,12,2000,0,0); } if ((_sceneId == 19)) { decision(1,12,500,0,0); }"
            },
            "com.tencent.tmgp.speedmobile": {
                "enable": 1,
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.tmgp.speedmobile/com.tencent.tmgp.speedmobile.speedmobile#0",
                "dc_config":{"7":"key7", "8":"key8", "52":"key9", "53":"key10", "54":"key6"},
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0);} if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0);} if ((^sceneId != 101) && (_sceneId == 101)) { decision(3, 18, 0, 0, 0); } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { decision(3, 0, 0, 0, 0); } "
            },
            "com.tencent.tmgp.speedmobileEx": {
                "enable": 1,
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.tmgp.speedmobileEx/com.tencent.tmgp.speedmobileEx.speedmobileEx#0",
                "dc_config":{"7":"key7", "8":"key8", "52":"key9", "53":"key10", "54":"key6"},
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0);} if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0);} if ((^sceneId != 101) && (_sceneId == 101)) { decision(3, 18, 0, 0, 0); } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { decision(3, 0, 0, 0, 0); } "
            },
            "com.tencent.ig": {
                "enable": 1,
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.ig/com.epicgames.ue4.GameActivity#0",
                "dc_config":{"7":"key7", "8":"key8", "52":"key9", "53":"key10", "54":"key6"}
            },
            "com.pubg.krmobile": {
                "enable": 1,
                "layer": "SurfaceView - com.pubg.krmobile/com.epicgames.ue4.GameActivity#0",
                "dc_config":{"7":"key7", "8":"key8", "52":"key9", "53":"key10", "54":"key6"}
            },
            "com.vng.pubgmobile": {
                "enable": 1,
                "layer": "SurfaceView - com.vng.pubgmobile/com.epicgames.ue4.GameActivity#0",
                "dc_config":{"7":"key7", "8":"key8", "52":"key9", "53":"key10", "54":"key6"}
            },
            "com.tencent.tmgp.pubgmhd": {
                "enable": 1,
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.tmgp.pubgmhd/com.epicgames.ue4.GameActivity#0",
                "dc_config":{"7":"key7", "8":"key8", "52":"key9", "53":"key10", "54":"key6"},
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(8, 97, 0, 0, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,15,20000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 15, 0, 0, 0) decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; decision(1,15,0,0,0); }"
            },
            "com.tencent.tmgp.pubgmhdce": {
                "enable": 1,
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.tmgp.pubgmhdce/com.epicgames.ue4.GameActivity#0",
                "dc_config":{"7":"key7", "8":"key8", "52":"key9", "53":"key10", "54":"key6"},
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(8, 97, 0, 0, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,15,20000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 15, 0, 0, 0) decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; decision(1,15,0,0,0); }"
            },
            "com.tencent.tmgp.pubgm": {
                "enable":1,
                "has_start_signal":1,
                "layer":"SurfaceView - com.tencent.tmgp.pubgm/com.epicgames.ue4.GameActivity#0",
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,15,20000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 0)) { loading=0; decision(1, 15, 0, 0, 0); decision(9,3,0,0,0); } if ((_sceneId == 101) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); } if ((game_started == 1) && (_sceneId == 0)) { game_started = 2; } else if ((game_started == 2) && (_sceneId == 0)) { game_started = 0; decision(9, 1, 0, 0, 0); }"
            },
            "com.netease.hyxd.nearme.gamecenter": {
                "enable":1,
                "has_start_signal":1,
                "layer": "com.netease.hyxd.nearme.gamecenter/com.netease.game.MessiahNativeActivity#0",
                 "dc_config":{"targetFPS":"key7", "renderLevel":"key8"}
            },
            "com.netease.hyxd": {
                "enable":1,
                "has_start_signal":1,
                "layer": "com.netease.hyxd/com.netease.game.MessiahNativeActivity#0",
                 "dc_config":{"targetFPS":"key7", "renderLevel":"key8"}
            },
            "com.ss.android.ugc.aweme": {
                "enable":1,
                 "rules": "print ^sceneId; print _sceneId; if ((_sceneId == 1) && (^sceneId == -1)) { decision(1,13,3000,0,0); } if ((_sceneId == 5) && (^sceneId != 5) && (_status == 1)) { decision(1,15,17000,0,0); } if ((_sceneId == 3) && (^sceneId != 3) && (_status == 1)) { decision(1,15,18000,0,0); } if ((_sceneId == 3) && (^sceneId == 3) && (_status == 2)) { decision(1,15,0,0,0); } if ((_sceneId == 7) && (_status == 1)) { decision(1,15,5000,0,0); } if ((_sceneId == 7) && (_status == 2)) { decision(1,15,0,0,0); } if((_sceneId == 1002) && (_status == 1) ) { decision(1,12,400,0,0); } if((_sceneId == 1003) && (_status == 1) ) { decision(1,12,500,0,0); } if((_sceneId == 1005) && (_status == 1) ) { decision(1,12,500,0,0); }"
            },
            "com.tencent.af": {
                "enable":1,
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.af/com.tencent.af.AFActivity#0",
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); }"
            },
            "com.tencent.aft": {
                "enable":1,
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.aft/com.tencent.aft.AFTActivity#0",
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); }"
            },
            "com.tencent.kof": {
                "enable":1,
                "has_start_signal":1,
                "layer": "SurfaceView - com.tencent.kof/com.tencent.tmgp.kof.GameActivity#0",
                "rules": "if ((^sceneId == 5) && (_sceneId == 7)) {game_started = 1;decision(9, 0, 0, 0, 0);} if ((game_started == 1) && (_sceneId == 5)) {game_started = 0;decision(9, 1, 0, 0, 0);}"
            },
            "com.sixjoy.warsong1": {
                "enable":0,
                "has_start_signal":1,
                "layer": "SurfaceView - com.sixjoy.warsong1/com.sixjoy.warsong1.WarsongActivity#0",
                "rules": "print ^sceneId; print _sceneId; if ((loading != 1) && (_sceneId == 3)) { decision(1, 12, 10000, 0, 0); loading = 1; } if ((loading != 1) && (_sceneId == 5)) { decision(1, 12, 15000, 0, 0); loading = 1; } if ((loading == 1) && (_sceneId != 5) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); loading = 0; } if ((game_started != 1) && (_sceneId == 7)) { decision(9, 0, 0, 0, 0); game_started = 1; } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != -1)) { decision(9, 1, 0, 0, 0); game_started = 0; }",
                "dc_config":{"7":"key7"}
            },
            "com.tencent.tmgp.jxqy2": {
                "enable":1,
                "layer":"com.tencent.tmgp.jxqy2/com.epicgames.ue4.GameActivity#0",
                "rules": "if (_sceneId == 3) {decision(1, 13, 4000, 0 ,0);} if (_sceneId == 5) {decision(1, 13, 25000, 0 ,0);}"
            },
            "com.tencent.raziel": {
                "enable":1,
                "layer":"com.tencent.raziel/com.py.game.MainActivity#0",
                "rules": "if (_sceneId == 2) {decision(1, 13, 25000, 0 ,0);} if (_sceneId == 3) {decision(1, 13, 20000, 0 ,0);} if (_sceneId == 5) {decision(1, 13, 25000, 0 ,0);} if (_sceneId == 0) {decision(1, 13, 20000, 0 ,0);}"
            },
            "com.netease.blqx.nearme.gamecenter":{
                "enable":1,
                "rules": "if (_actionType == 100 ) {decision(1, 13, 4000, 0 ,0);} if (_actionType == 110) {decision(1, 13, 10000, 0 ,0);} if (_actionType == 102) {decision(1, 13, 25000, 0 ,0);}"
            },
            "com.tencent.tmgp.sgame": {
                "enable":1
            },
            "com.tencent.KiHan": {
                "enable":1
            },
            "com.tencent.YiRen": {
                "enable":1
            },
            "com.tencent.tmgp.WePop": {
                "enable":1
            },
            "com.tencent.tmgp.dnf": {
                "enable":1
            },
            "com.tencent.tmgp.qs": {
                "enable":1
            },
            "com.tencent.tmgp.projectg": {
                "enable":1
            },
            "com.tencent.igce": {
                "enable":1
            },
            "com.miHoYo.enterprise.NGHSoDBeta": {
                "enable":1
            },
            "com.tencent.tmgp.KiHan": {
                "enable":1
            },
            "com.tencent.tmgp.cod": {
                "enable":1
            },
            "com.tencent.tmgp.sgamece": {
                "enable":1
            },
            "com.netease.moba.early": {
                "enable":1
            },
            "com.netease.wptqz": {
                "enable":1
            },
	    "com.tencent.tmgp.wuxia": {
                "enable":1
            },
	    "com.netease.lztg.nearme.gamecenter": {
                "enable":1
            }
        }
    },
    "SDM845": {
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,15,20000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 15, 0, 0, 0) decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if (target_fps == 60) { control(1766400,825600,4,4,1,1920000,1286400,4,3,1,0,0,0,0,0,675000000,257000000,1,1,1,12); } else { control(1766400,825600,4,4,1,1920000,1363200,3,2,1,0,0,0,0,0,675000000,257000000,1,1,1,12); } } else if (perfmode == 1) { control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } else if (perfmode == 2) { if (final_table == 1) { control(1766400,902400,4,4,1,2649600,1689600,4,4,1,0,0,0,0,0,710000000,414000000,1,1,1,12); } else { control(1766400,902400,4,4,1,2649600,1536000,4,4,1,0,0,0,0,0,710000000,257000000,1,1,1,12); } } else { print 4444; print perfmode; } } } need_update = 0;",
                "dc_config":{"7":"key7", "8":"key8", "52":"key9", "53":"key10", "54":"key6"}
            },
            "com.tencent.tmgp.pubgmhdce": {
                "rules":"print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,15,20000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 15, 0, 0, 0) decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if (target_fps == 60) { control(1766400,825600,4,4,1,1920000,1286400,4,3,1,0,0,0,0,0,675000000,257000000,1,1,1,12); } else { control(1766400,825600,4,4,1,1920000,1363200,3,2,1,0,0,0,0,0,675000000,257000000,1,1,1,12); } } else if (perfmode == 1) { control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } else if (perfmode == 2) { if (final_table == 1) { control(1766400,902400,4,4,1,2649600,1689600,4,4,1,0,0,0,0,0,710000000,414000000,1,1,1,12); } else { control(1766400,902400,4,4,1,2649600,1536000,4,4,1,0,0,0,0,0,710000000,257000000,1,1,1,12); } } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.ss.android.ugc.aweme": {
                "rules": "print ^sceneId; print _sceneId; if ((_sceneId == 1) && (^sceneId == -1)) { decision(1,13,3000,0,0); } if ((_sceneId == 5) && (^sceneId != 5) && (_status == 1)) { decision(1,15,17000,0,0); } if ((_sceneId == 3) && (^sceneId != 3) && (_status == 1)) { decision(1,15,18000,0,0); } if ((_sceneId == 3) && (^sceneId == 3) && (_status == 2)) { decision(1,15,0,0,0); } if ((_sceneId == 7) && (_status == 1)) { decision(1,15,5000,0,0); } if ((_sceneId == 7) && (_status == 2)) { decision(1,15,0,0,0); } if((_sceneId == 1002) && (_status == 1) ) { decision(1,15,400,0,0); } if((_sceneId == 1003) && (_status == 1) ) { decision(1,12,500,0,0); } if((_sceneId == 1005) && (_status == 1) ) { decision(1,15,600,0,0); }"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 18000, 0, 0); } if ((^sceneId != 100) && (_sceneId == 100)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (need_update == 1) { if (perfmode == 0) { if(target_fps == 60 ){ control(1766400,902400,4,4,1,1766000,1536000,4,3,1,0,0,0,0,0,520000000,257000000,1,1,1,12); } else { control(1766400,902400,4,4,1,1766000,1536000,4,3,1,0,0,0,0,0,520000000,257000000,1,1,1,-1); } } else if (perfmode == 1) { control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1766400,902400,4,4,1,2649600,1689600,4,4,1,0,0,0,0,0,710000000,414000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 18000, 0, 0); } if ((^sceneId != 100) && (_sceneId == 100)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (need_update == 1) { if (perfmode == 0) { if(target_fps == 60 ){ control(1766400,902400,4,4,1,1766000,1536000,4,3,1,0,0,0,0,0,520000000,257000000,1,1,1,12); } else { control(1766400,902400,4,4,1,1766000,1536000,4,3,1,0,0,0,0,0,520000000,257000000,1,1,1,-1); } } else if (perfmode == 1) { control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1766400,902400,4,4,1,2649600,1689600,4,4,1,0,0,0,0,0,710000000,414000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { ; } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 15, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 15, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 15, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; }"
            },
            "connectionless": {
                "com.tencent.fifamobile": {
                    "enable":1,
                    "rules": "if (_fg == 1) {control(1766400,902400,4,4,1,2246400,1056000,2,2,1,0,0,0,0,0,710000000,257000000,1,1,1,12);} else if (_fg == 0) {control(1766400,576000,4,4,1,2246400,1056000,2,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1);}"
                },
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules": "if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,257000000,257000000,1,1,1,12); } else if (perfmode == 1) { control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1766400,902400,4,4,1,2649600,1536000,4,4,1,0,0,0,0,0,710000000,257000000,1,1,1,12); } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster":"Thread-2",
                    "rules": "if (_fg == 1) {decision(14, 1, 3000, 0, 0); decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.tmgp.sgame": {
                    "enable":1,
                    "rules": "if (_fg == 1) {control(1766400,825600,4,4,1,2092800,979200,4,3,1,0,0,0,0,0,710000000,257000000,1,1,1,12);} else if (_fg == 0) {control(1766400,825600,4,4,1,2092800,979200,4,3,1,0,0,0,0,0,710000000,257000000,1,1,1,-1);}"
                }
            }
        }
    },
    "SDM855": {
        "gpu_freq_table_path": "/sys/devices/platform/soc/2c00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/freq_table_mhz",
        "gpu_freq_stat_path": "/sys/devices/platform/soc/2c00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/gpu_clock_stats",
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "thermal_list": {
            "skin":"skin-therm",
            "battery":"battery",
            "cpu":"cpuss-0-usr"
        },
        "oifacegame": {
            "com.tencent.tmgp.sgame" : {
               "fb_enable": 1
            },
            "com.tencent.tmgp.sgamece" : {
               "fb_enable": 1
            },
            "com.ngame.allstar.eu": {
                "fb_enable": 1
            },
            "com.garena.game.kgtw": {
                "fb_enable": 1
            }
        },
        "sdk": {
            "com.tencent.tmgp.pubgmhd": {
                "fb_enable": 1,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501) || (_sceneId == 601) || (_sceneId == 701)) { decision(19, 1, 0, 0, 0); } if ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502) || (_sceneId == 602) || (_sceneId == 702)) { decision(19, 0, 0, 0, 0); } if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 14, 200); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 14, 0); control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,29,20000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 29, 0, 0, 0) decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 28, 3000, 0, 0); } } if (need_update == 1) { if (target_fps == 90) { decision(18, 1, 1, 0, 0); } else { decision(18, 1, 0, 0, 0); } if (perfmode == 0) { if (target_fps == 90) { control(1785600,1113600,4,4,1,2419200,1401600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else if (target_fps == 60) { control(1785600,1036800,4,4,1,2419200,1286400,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } } else if (perfmode == 1) { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1785600,1209600,4,4,1,2419200,1497600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.pubgmhdce": {
                "fb_enable": 1,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501) || (_sceneId == 601) || (_sceneId == 701)) { decision(19, 1, 0, 0, 0); } if ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502) || (_sceneId == 602) || (_sceneId == 702)) { decision(19, 0, 0, 0, 0); } if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 14, 200); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 14, 0); control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,29,20000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 29, 0, 0, 0) decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 28, 3000, 0, 0); } } if (need_update == 1) { if (target_fps == 90) { decision(18, 1, 1, 0, 0); } else { decision(18, 1, 0, 0, 0); } if (perfmode == 0) { if (target_fps == 90) { control(1785600,1113600,4,4,1,2419200,1401600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else if (target_fps == 60) { control(1785600,1036800,4,4,1,2419200,1286400,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } } else if (perfmode == 1) { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1785600,1209600,4,4,1,2419200,1497600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.ig": {
                "fb_enable": 1,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501) || (_sceneId == 601) || (_sceneId == 701)) { decision(19, 1, 0, 0, 0); } if ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502) || (_sceneId == 602) || (_sceneId == 702)) { decision(19, 0, 0, 0, 0); } if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 14, 200); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 14, 0); control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,29,20000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 29, 0, 0, 0) decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 28, 3000, 0, 0); } } if (need_update == 1) { if (target_fps == 90) { decision(18, 1, 1, 0, 0); } else { decision(18, 1, 0, 0, 0); } if (perfmode == 0) { if (target_fps == 90) { control(1785600,1113600,4,4,1,2419200,1401600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else if (target_fps == 60) { control(1785600,1036800,4,4,1,2419200,1286400,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } } else if (perfmode == 1) { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1785600,1209600,4,4,1,2419200,1497600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.pubg.krmobile": {
                "fb_enable": 1,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501) || (_sceneId == 601) || (_sceneId == 701)) { decision(19, 1, 0, 0, 0); } if ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502) || (_sceneId == 602) || (_sceneId == 702)) { decision(19, 0, 0, 0, 0); } if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 14, 200); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 14, 0); control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,29,20000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 29, 0, 0, 0) decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 28, 3000, 0, 0); } } if (need_update == 1) { if (target_fps == 90) { decision(18, 1, 1, 0, 0); } else { decision(18, 1, 0, 0, 0); } if (perfmode == 0) { if (target_fps == 90) { control(1785600,1113600,4,4,1,2419200,1401600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else if (target_fps == 60) { control(1785600,1036800,4,4,1,2419200,1286400,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } } else if (perfmode == 1) { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1785600,1209600,4,4,1,2419200,1497600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.vng.pubgmobile": {
                "fb_enable": 1,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501) || (_sceneId == 601) || (_sceneId == 701)) { decision(19, 1, 0, 0, 0); } if ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502) || (_sceneId == 602) || (_sceneId == 702)) { decision(19, 0, 0, 0, 0); } if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 14, 200); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 14, 0); control(1766400,902400,4,4,1,1920000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,29,20000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 29, 0, 0, 0) decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 28, 3000, 0, 0); } } if (need_update == 1) { if (target_fps == 90) { decision(18, 1, 1, 0, 0); } else { decision(18, 1, 0, 0, 0); } if (perfmode == 0) { if (target_fps == 90) { control(1785600,1113600,4,4,1,2419200,1401600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else if (target_fps == 60) { control(1785600,1036800,4,4,1,2419200,1286400,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } } else if (perfmode == 1) { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1785600,1209600,4,4,1,2419200,1497600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.ss.android.ugc.aweme": {
                "enable":1,
                 "rules": "print ^sceneId; print _sceneId; if ((_sceneId == 1) && (^sceneId == -1)) { decision(1,28,3000,0,0); } if ((_sceneId == 5) && (^sceneId != 5) && (_status == 1)) { decision(1,28,6000,0,0); } if ((_sceneId == 3) && (^sceneId != 3) && (_status == 1)) { decision(1,28,12000,0,0); } if ((_sceneId == 3) && (^sceneId == 3) && (_status == 2)) { decision(1,28,0,0,0); } if ((_sceneId == 7) && (_status == 1)) { decision(1,28,5000,0,0); } if ((_sceneId == 7) && (_status == 2)) { decision(1,28,0,0,0); } if((_sceneId == 1002) && (_status == 1) ) { decision(1,12,400,0,0); } if((_sceneId == 1003) && (_status == 1) ) { decision(1,12,500,0,0); } if((_sceneId == 1005) && (_status == 1) ) { decision(1,12,800,0,0); }"
            },
            "com.netease.hyxd.nearme.gamecenter": {
                "fb_enable": 0,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 28, 10000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 28, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1, 29, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(1, 29, 0, 0, 0); decision(9, 3, 0, 0, 0); } if ((game_started != 1) && (_sceneId != -1) && (_sceneId != 3) && (_sceneId != 4) && (_sceneId != 5)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(13, 88, 78, 0, 0); decision(17, 10, 0, 0, 0); decision(20, 1, 1, 14, 200); need_update = 1; } if (game_started == 1) { if (((^sceneId != 6) && (_sceneId == 6))) { high_load_scene = 1; } else if (((^sceneId != 103) && (_sceneId == 103)) || ((^sceneId != 100) && (_sceneId == 100))) { high_load_scene = 2; } else if ((_sceneId != -1) && (_sceneId != 6) && (_sceneId != 103) && (_sceneId != 100) && (_sceneId != 101)) { high_load_scene = 0; } high_load_scene = 0; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(17, 0, 0, 0, 0); decision(20, 0, 1, 14, 0); control(1785600,576000,4,2,1,2419200,710400,3,2,1,0,0,0,0,0,585000000,257000000,1,1,1,-1); decision(1, 28, 5000, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1 && _targetFPS != target_fps) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1) && need_update == 1) { if (perfmode == 1) { control(1785600,576000,4,2,1,2419200,710400,3,2,1,0,0,0,0,0,585000000,257000000,1,1,1,-1); } else { if (high_load_scene == 1) { control(1785600,1478400,2,2,1,2419200,2227200,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else if (high_load_scene == 2) { control(1785600,1209600,2,2,1,2419200,1401600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { if (perfmode == 0) { if(target_fps == 60 ) { control(1785600,1036800,4,2,1,2419200,1612800,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else if(target_fps == 30 ) { control(1785600,1036800,4,2,1,2419200,1171200,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else if(target_fps == 40 ) { control(1785600,1036800,4,2,1,2419200,1286400,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } else { control(1785600,1036800,4,2,1,2419200,1056000,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } } else if (perfmode == 2) { control(1785600,1209600,4,2,1,2419200,1708800,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12); } }; decision(1, 13, 3000, 0, 0); } print perfmode; } need_update = 0;"
            },
            "connectionless": {
                "com.netease.hyxd": {
                    "enable" : 1,
                    "rules": "if (_fg == 1) {control(1785600,1036800,4,2,1,2419200,1497600,3,3,1,0,0,0,0,0,585000000,257000000,1,1,1,12);}"
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0);} if (_fg == 0) { decision(21, 0, 0, 0, 0);}"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster":"Thread-2",
                    "rules": "if (_fg == 1) {decision(14, 1, 3000, 0, 0); decision(8, 97, 0, 0, 0);decision(21, 1, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);decision(21, 0, 0, 0, 0);}"
                }
            }
        }
    },
    "MT6771": {
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "delay": 50,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(8, 48, 0, 0, 0); decision(9, 1, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,22,20000,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 22, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; decision(1,15,0,0,0); }"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "delay": 50,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(8, 48, 0, 0, 0); decision(9, 1, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,22,20000,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 22, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; decision(1,15,0,0,0); }"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(8, 48, 0, 0, 0); decision(9, 1, 0, 0, 0); control(3000000,1014000,4,4,1,3000000,1014000,4,4,1,0,0,0,0,0,1000000,540000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,22,20000,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 22, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; decision(1,15,0,0,0); } if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if (_7 != -1) { target_fps = _7; need_update = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } if (need_update == 1) { if ((target_fps == 40) || (final_table == 1) || ((target_fps == 30) && (target_quality == 4))) { control(3000000,1014000,4,4,1,3000000,1014000,4,4,1,0,0,0,0,0,1000000,540000,1,1,1,262156); } else { control(3000000,910000,4,4,1,3000000,910000,4,4,1,0,0,0,0,0,1000000,460000,1,1,1,262156); } } } need_update = 0;"
            },
            "connectionless": {
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0);} if (_fg == 0) { decision(21, 0, 0, 0, 0);}"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(14, 2, 10000, 0, 0); decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                }
            }
        },
        "gputuner":{
            "enable":1,
            "anisolevel":16,
            "pkgsettings":{
                "com.tencent.tmgp.pubgmhd":3,
                "com.tencent.ig":3
            }
        }
    },
    "MT6779": {
        "gpu_freq_table_path": "/proc/gpufreq/gpufreq_opp_list",
        "gpu_freq_stat_path": "/sys/kernel/debug/ged/hal/opp_logs",
        "foreground": {
            "enable": 1,
            "cpus": "0-5",
            "pkg_list":["com.tencent.tmgp.sgame", "com.tencent.tmgp.pubgmhd"]
        },
        "sdk": {
            "com.tencent.tmgp.pubgmhd": {
                "fb_enable": 2,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); control(2000000,850000,6,4,1,2208000,998000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,15,0,0,0); } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if (target_fps == 40) { control(2000000,774000,6,6,1,2200000,850000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { control(2000000,774000,6,6,1,2200000,850000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,12); } } else if (perfmode == 1) { control(1800000,774000,6,4,1,2066000,850000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,12); } else if (perfmode == 2) { control(2000000,850000,6,6,1,2200000,998000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.pubgmhdce": {
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); control(2000000,850000,6,4,1,2208000,998000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,15,0,0,0); } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if (target_fps == 40) { control(2000000,774000,6,6,1,2200000,850000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { control(2000000,774000,6,6,1,2200000,850000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,12); } } else if (perfmode == 1) { control(1800000,774000,6,4,1,2066000,850000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,12); } else if (perfmode == 2) { control(2000000,850000,6,6,1,2200000,998000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.ig": {
                "fb_enable": 2,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); control(2000000,850000,6,4,1,2208000,998000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,15,0,0,0); } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if (target_fps == 40) { control(2000000,774000,6,6,1,2200000,850000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { control(2000000,774000,6,6,1,2200000,850000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,12); } } else if (perfmode == 1) { control(1800000,774000,6,4,1,2066000,850000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,12); } else if (perfmode == 2) { control(2000000,850000,6,6,1,2200000,998000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 20000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(1, 13, 0, 0, 0); decision(9, 3, 0, 0, 0); game_started = 1; need_update = 1; } if ((^sceneId != 100) && (_sceneId == 100)) { decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (need_update == 1) { if (perfmode == 0) { if(target_fps == 60 ){ control(2000000,1275000,6,6,1,2200000,1295000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else if(target_fps == 30 ) { control(2000000,1075000 ,6,6,1,2200000,1087000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,12); } else if(target_fps == 40 ) { control(2000000,1175000 ,6,6,1,2200000,1176000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { control(2000000,999000,6,6,1,2200000,998000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,-1); } } else if (perfmode == 1) { control(2000000,1612800,4,4,1,2200000,1087000,3,2,1,0,0,0,0,0,970000,360000,1,1,1,-1); } else if (perfmode == 2) { control(2000000,1275000,6,6,1,2200000,1295000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 20000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(1, 13, 0, 0, 0); decision(9, 3, 0, 0, 0); game_started = 1; need_update = 1; } if ((^sceneId != 100) && (_sceneId == 100)) { decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (need_update == 1) { if (perfmode == 0) { if(target_fps == 60 ){ control(2000000,1275000,6,6,1,2200000,1295000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else if(target_fps == 30 ) { control(2000000,1075000 ,6,6,1,2200000,1087000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,12); } else if(target_fps == 40 ) { control(2000000,1175000 ,6,6,1,2200000,1176000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { control(2000000,999000,6,6,1,2200000,998000,2,2,1,0,0,0,0,0,970000,295000,1,1,1,-1); } } else if (perfmode == 1) { control(2000000,1612800,4,4,1,2200000,1087000,3,2,1,0,0,0,0,0,970000,360000,1,1,1,-1); } else if (perfmode == 2) { control(2000000,1275000,6,6,1,2200000,1295000,2,2,1,0,0,0,0,0,970000,360000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "connectionless": {
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0); decision(8, 97, 0, 0, 0);} if (_fg == 0) { decision(21, 0, 0, 0, 0); decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.ig": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.ngame.allstar.eu": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(14, 2, 10000, 0, 0); decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                }
            }
        },
        "gputuner":{
            "enable":1,
            "anisolevel":16,
            "pkgsettings":{
                "com.tencent.tmgp.pubgmhd":1,
                "com.tencent.ig":1
            }
        }
    },
    "MT6885": {
        "gpu_freq_table_path": "/d/ged/hal/gpu_utilization",
        "gpu_freq_stat_path": "/sys/kernel/debug/ged/hal/opp_logs",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 1, 1, 12, 100); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,864000,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,-1); decision(20, 0, 1, 12, 100); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,10000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { target_fps = _7; } if (_8 != -1) { target_quality = _8; } if(_54 != -1) { anti_aliasing = _54; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if ((target_fps == 60) || (final_table == 1) || (jump == 1) || ((target_fps == 40) && (target_quality == 5))) { control(2000000,1048000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } else if (target_fps == 40) { control(2000000,968000,4,4,1,2202000,1176000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } else if (target_fps == 30) { control(2000000,862000,4,4,1,2202000,1176000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } else { control(2000000,862000,4,4,1,2202000,1176000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } } else if (perfmode == 1) { control(2000000,500000,4,4,1,1975000,825000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,16384); } else if (perfmode == 2) { control(2000000,1393000,4,4,1,2202000,1367000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); decision(20, 1, 1, 12, 100); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 1, 1, 12, 100); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,864000,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,-1); decision(20, 0, 1, 12, 100); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,10000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { target_fps = _7; } if (_8 != -1) { target_quality = _8; } if(_54 != -1) { anti_aliasing = _54; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if ((target_fps == 60) || (final_table == 1) || (jump == 1) || ((target_fps == 40) && (target_quality == 5))) { control(2000000,1048000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } else if (target_fps == 40) { control(2000000,968000,4,4,1,2202000,1176000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } else if (target_fps == 30) { control(2000000,862000,4,4,1,2202000,1176000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } else { control(2000000,862000,4,4,1,2202000,1176000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } } else if (perfmode == 1) { control(2000000,500000,4,4,1,1975000,825000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,16384); } else if (perfmode == 2) { control(2000000,1393000,4,4,1,2202000,1367000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); decision(20, 1, 1, 12, 100); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 1, 1, 12, 100); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,864000,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,-1); decision(20, 0, 1, 12, 100); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,10000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { target_fps = _7; } if (_8 != -1) { target_quality = _8; } if(_54 != -1) { anti_aliasing = _54; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if ((target_fps == 60) || (final_table == 1) || (jump == 1) || ((target_fps == 40) && (target_quality == 5))) { control(2000000,1048000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } else if (target_fps == 40) { control(2000000,968000,4,4,1,2202000,1176000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } else if (target_fps == 30) { control(2000000,862000,4,4,1,2202000,1176000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } else { control(2000000,862000,4,4,1,2202000,1176000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); } } else if (perfmode == 1) { control(2000000,500000,4,4,1,1975000,825000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,16384); } else if (perfmode == 2) { control(2000000,1393000,4,4,1,2202000,1367000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,0); decision(20, 1, 1, 12, 100); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; need_update = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 100); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 100); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); } if (game_started == 1) { if (need_update == 1) { if (perfmode == 0) { control(2000000,703000,4,4,1,2202000,921000,4,2,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if (perfmode == 1) { control(2000000,500000,4,4,1,2202000,730000,3,2,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if (perfmode == 2) { control(2000000,1048000,4,4,1,2202000,1048000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; need_update = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 100); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 100); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); } if (game_started == 1) { if (need_update == 1) { if (perfmode == 0) { control(2000000,703000,4,4,1,2202000,921000,4,2,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if (perfmode == 1) { control(2000000,500000,4,4,1,2202000,730000,3,2,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if (perfmode == 2) { control(2000000,1048000,4,4,1,2202000,1048000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 10000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1, 15, 22000, 0, 0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(1, 15, 0, 0, 0); decision(9, 3, 0, 0, 0); } if ((game_started != 1) && (_sceneId != -1) && (_sceneId != 3) && (_sceneId != 4) && (_sceneId != 5)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(13, 88, 78, 0, 0); decision(17, 10, 0, 0, 0); need_update = 1; } if (game_started == 1) { if (((^sceneId != 6) && (_sceneId == 6)) && (target_fps == 60)) { high_load_scene = 1; need_update = 1; } else if (((^sceneId != 103) && (_sceneId == 103)) || ((^sceneId != 100) && (_sceneId == 100))) { if((target_fps == 60) || (target_fps == 40)) { high_load_scene = 2; need_update = 1; } } else if ((_sceneId != -1) && (_sceneId != 6) && (_sceneId != 103) && (_sceneId != 100) && (_sceneId != 101)) { high_load_scene = 0; need_update = 1; } high_load_scene = 0; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(17, 0, 0, 0, 0); control(1804800,576000,4,2,1,2016000,652800,3,2,1,0,0,0,0,0,900000000,320000000,1,1,1,-1); decision(1, 15, 5000, 0, 0); decision(20, 0, 1, 12, 100); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1 && _targetFPS != target_fps) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1) && need_update == 1) { if (perfmode == 1) { control(2000000,650000,4,2,1,2050000,730000,4,2,1,695000,350000,1,1,1,-1); } else { if (high_load_scene == 1) { control(2000000,1048000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if (high_load_scene == 2) { control(2000000,862000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else { if (perfmode == 0) { if(target_fps == 60 ) { control(2000000,862000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if(target_fps == 30 ) { control(2000000,862000,4,4,1,2202000,1048000,4,3,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if(target_fps == 40 ) { control(2000000,1048000,4,4,1,2202000,1176000,4,3,1,695000,350000,1,1,1,12); } else { control(2000000,968000,4,2,1,2202000,1048000,4,3,1,0,0,0,0,0,695000,350000,1,1,1,12); } } else if (perfmode == 2) { control(2000000,1048000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); decision(20, 1, 1, 12, 100); } }; decision(1, 13, 3000, 0, 0); } print perfmode; } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 10000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1, 15, 22000, 0, 0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(1, 15, 0, 0, 0); decision(9, 3, 0, 0, 0); } if ((game_started != 1) && (_sceneId != -1) && (_sceneId != 3) && (_sceneId != 4) && (_sceneId != 5)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(13, 88, 78, 0, 0); decision(17, 10, 0, 0, 0); need_update = 1; } if (game_started == 1) { if (((^sceneId != 6) && (_sceneId == 6)) && (target_fps == 60)) { high_load_scene = 1; need_update = 1; } else if (((^sceneId != 103) && (_sceneId == 103)) || ((^sceneId != 100) && (_sceneId == 100))) { if((target_fps == 60) || (target_fps == 40)) { high_load_scene = 2; need_update = 1; } } else if ((_sceneId != -1) && (_sceneId != 6) && (_sceneId != 103) && (_sceneId != 100) && (_sceneId != 101)) { high_load_scene = 0; need_update = 1; } high_load_scene = 0; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(17, 0, 0, 0, 0); control(1804800,576000,4,2,1,2016000,652800,3,2,1,0,0,0,0,0,900000000,320000000,1,1,1,-1); decision(1, 15, 5000, 0, 0); decision(20, 0, 1, 12, 100); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1 && _targetFPS != target_fps) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1) && need_update == 1) { if (perfmode == 1) { control(2000000,650000,4,2,1,2050000,730000,4,2,1,695000,350000,1,1,1,-1); } else { if (high_load_scene == 1) { control(2000000,1048000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if (high_load_scene == 2) { control(2000000,862000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else { if (perfmode == 0) { if(target_fps == 60 ) { control(2000000,862000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if(target_fps == 30 ) { control(2000000,862000,4,4,1,2202000,1048000,4,3,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if(target_fps == 40 ) { control(2000000,1048000,4,4,1,2202000,1176000,4,3,1,695000,350000,1,1,1,12); } else { control(2000000,968000,4,2,1,2202000,1048000,4,3,1,0,0,0,0,0,695000,350000,1,1,1,12); } } else if (perfmode == 2) { control(2000000,1048000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); decision(20, 1, 1, 12, 100); } }; decision(1, 13, 3000, 0, 0); } print perfmode; } need_update = 0;"
            },
            "com.tencent.af": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; decision(1, 13, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.tencent.aft": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; decision(1, 13, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { control(2000000,1048000,4,4,1,2202000,1271000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if (perfmode == 1) { control(2000000,500000,4,4,1,1975000,825000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } else if (perfmode == 2) { control(2000000,1393000,4,4,1,2202000,1367000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,12); } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) { decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "rules": "if (_fg == 1) { decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.ngame.allstar.eu" : {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) { decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.ig": {
                    "enable": 1,
                    "rules": "if (_fg == 1) { decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                }
            }
        }
    },
    "MT6873": {
        "gpu_freq_table_path": "/d/ged/hal/gpu_utilization",
        "gpu_freq_stat_path": "/sys/kernel/debug/ged/hal/opp_logs",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 80, 74, 0, 0); decision(20, 1, 1, 12, 100); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 100); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; decision(1, 15, 90000, 0, 0); } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; } if (_8 != -1) { target_quality = _8; } if(_54 != -1) { anti_aliasing = _54; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 1) { control(2000000,500000,4,4,1,1850000,774000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,16384); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 80, 74, 0, 0); decision(20, 1, 1, 12, 100); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 100); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; decision(1, 15, 90000, 0, 0); } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; } if (_8 != -1) { target_quality = _8; } if(_54 != -1) { anti_aliasing = _54; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 1) { control(2000000,500000,4,4,1,1850000,774000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,16384); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 80, 74, 0, 0); decision(20, 1, 1, 12, 100); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 100); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; decision(1, 15, 90000, 0, 0); } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; } if (_8 != -1) { target_quality = _8; } if(_54 != -1) { anti_aliasing = _54; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 1) { control(2000000,500000,4,4,1,1850000,774000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,16384); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 100); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 100); } if ((^sceneId != 101) && (_sceneId == 101)) { } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); }"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 100); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 100); } if ((^sceneId != 101) && (_sceneId == 101)) { } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); }"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 10000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1, 15, 22000, 0, 0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(1, 15, 0, 0, 0); decision(9, 3, 0, 0, 0); } if ((game_started != 1) && (_sceneId != -1) && (_sceneId != 3) && (_sceneId != 4) && (_sceneId != 5)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(13, 88, 78, 0, 0); decision(17, 10, 0, 0, 0); decision(1, 13, 3000, 0, 0); decision(20, 1, 1, 12, 100); need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(17, 0, 0, 0, 0); decision(1, 15, 5000, 0, 0); decision(20, 0, 1, 12, 100); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1 && _targetFPS != target_fps) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1) && need_update == 1) { if (perfmode == 1) { control(2000000,500000,4,4,1,1850000,774000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,16384); } print perfmode; } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 10000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1, 15, 22000, 0, 0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(1, 15, 0, 0, 0); decision(9, 3, 0, 0, 0); } if ((game_started != 1) && (_sceneId != -1) && (_sceneId != 3) && (_sceneId != 4) && (_sceneId != 5)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(13, 88, 78, 0, 0); decision(17, 10, 0, 0, 0); decision(1, 13, 3000, 0, 0); decision(20, 1, 1, 12, 100); need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(17, 0, 0, 0, 0); decision(1, 15, 5000, 0, 0); decision(20, 0, 1, 12, 100); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1 && _targetFPS != target_fps) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1) && need_update == 1) { if (perfmode == 1) { control(2000000,500000,4,4,1,1850000,774000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,16384); } print perfmode; } need_update = 0;"
            },
            "com.tencent.af": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; decision(1, 13, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.tencent.aft": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 2000, 3, _tid); decision(24, _tid, 0, 0, 0); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; decision(1, 13, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 1) { control(2000000,500000,4,4,1,1850000,774000,4,4,1,0,0,0,0,0,695000,350000,1,1,1,16384); } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) { decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "rules": "if (_fg == 1) { decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.ngame.allstar.eu" : {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) { decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.ig": {
                    "enable": 1,
                    "rules": "if (_fg == 1) { decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                }
            }
        }
    },
    "SDM450": {
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,12,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(1, 12, 0, 0, 0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 12, 75000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,12,0,0,0); } if ((xscope != 1) && ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501))) { decision(1,12,5000,0,0); xscope=1; } if ((xscope == 1) && ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502))) { xscope=0; decision(1,12,0,0,0); } if ((final != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { decision(1,12,6000,0,0); final=1; } if ((final == 1) && ((_sceneId == 105) || (_sceneId == 107) || (_sceneId == 109))) { final=0; decision(1,12,0,0,0); }"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,12,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(1, 12, 0, 0, 0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 12, 75000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,12,0,0,0); } if ((xscope != 1) && ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501))) { decision(1,12,5000,0,0); xscope=1; } if ((xscope == 1) && ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502))) { xscope=0; decision(1,12,0,0,0); } if ((final != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { decision(1,12,6000,0,0); final=1; } if ((final == 1) && ((_sceneId == 105) || (_sceneId == 107) || (_sceneId == 109))) { final=0; decision(1,12,0,0,0); }"
            }
        }
    },
    "SDM670": {
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); control(1708800,998400,6,4,1,2016000,979200,2,2,1,0,0,0,0,0,430000000,267000000,1,1,1,12); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); control(1708800,998400,6,6,1,2016000,1363200,2,2,1,0,0,0,0,0,430000000,267000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,15,0,0,0); } if ((xscope != 1) && ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501))) { decision(1,12,5000,0,0); xscope=1; } if ((xscope == 1) && ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502))) { xscope=0; decision(1,12,0,0,0); }",
                "dc_config":{"7":"key7", "8":"key8", "52":"key9", "53":"key10", "54":"key6"}
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); control(1708800,998400,6,4,1,2016000,979200,2,2,1,0,0,0,0,0,430000000,267000000,1,1,1,12); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); control(1708800,998400,6,6,1,2016000,1363200,2,2,1,0,0,0,0,0,430000000,267000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,15,0,0,0); } if ((xscope != 1) && ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501))) { decision(1,12,5000,0,0); xscope=1; } if ((xscope == 1) && ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502))) { xscope=0; decision(1,12,0,0,0); }"
            },
            "com.tencent.kof":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,15,3000,0,0); } if ((^sceneId == 5) && (_sceneId == 7)) { game_started = 1; decision(9, 0, 0, 0, 0); } if ((game_started == 1) && (_sceneId == 5)) { game_started = 0; decision(9, 1, 0, 0, 0); }"
            },
           "com.taobao.taobao":{
                "enable":1,
                "rules": "print ^sceneId; print _sceneId; if ((_sceneId == 1) && (^sceneId == -1)) {decision(1,13,3000,0,0);} if ((_sceneId == 2)) {decision(1,12,1000,0,0);} if (((_sceneId == 3) && (^sceneId != 3)) || ((_sceneId == 5) && (^sceneId != 5)) || ((_sceneId == 6) && (^sceneId !=6)) || ((_sceneId == 7) && (^sceneId != 7)) || ((_sceneId == 18) && (^sceneId != 18))) {decision(1,12,1000,0,0);} if ((_sceneId == 8)) {decision(1,12,2000,0,0);} if ((_sceneId == 10)) {decision(1,12,1000,0,0);} if ((_sceneId == 12)) {decision(1,12,500,0,0);} if ((_sceneId == 13)) {decision(1,12,500,0,0);} if ((_sceneId == 14)) {decision(1,12,500,0,0);} if ((_sceneId == 16)) {decision(1,12,2000,0,0);} if((_sceneId == 19)) {decision(1,12,500,0,0);}"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 22000, 0, 0); } if ((^sceneId != 100) && (_sceneId == 100)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (need_update == 1) { if (perfmode == 0) { if(target_fps == 60 ){ control(1708000,1516800,6,4,1,2016000,1747200,2,2,1,0,0,0,0,0,430000000,430000000,1,1,1,12); } else if((target_fps == 30 ) || (target_fps == 40 )) { control(1708000,998400 ,6,2,1,2016000,1132800,2,2,1,0,0,0,0,0,430000000,430000000,1,1,1,12); } else { control(1708000,748800,6,2,1,2016000,979200,2,2,1,0,0,0,0,0,430000000,430000000,1,1,1,-1); } } else if (perfmode == 1) { control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1708000,1612800,6,6,1,2016000,2016000,2,2,1,0,0,0,0,0,430000000,430000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 22000, 0, 0); } if ((^sceneId != 100) && (_sceneId == 100)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (need_update == 1) { if (perfmode == 0) { if(target_fps == 60 ){ control(1708000,1516800,6,4,1,2016000,1747200,2,2,1,0,0,0,0,0,430000000,430000000,1,1,1,12); } else if((target_fps == 30 ) || (target_fps == 40 )) { control(1708000,998400 ,6,2,1,2016000,1132800,2,2,1,0,0,0,0,0,430000000,430000000,1,1,1,12); } else { control(1708000,748800,6,2,1,2016000,979200,2,2,1,0,0,0,0,0,430000000,430000000,1,1,1,-1); } } else if (perfmode == 1) { control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1708000,1612800,6,6,1,2016000,2016000,2,2,1,0,0,0,0,0,430000000,430000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(8, 97, 0, 0, 0); decision(13, 98, 92, 0, 0); control(1708800,998400,6,6,1,2016000,1363200,2,2,1,0,0,0,0,0,430000000,267000000,1,1,1,12); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1708800,998400,6,6,1,2016000,1363200,2,2,1,0,0,0,0,0,430000000,267000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,20000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(1, 15, 0, 0, 0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,15,0,0,0); } if ((xscope != 1) && ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501))) { decision(1,12,5000,0,0); xscope=1; } if ((xscope == 1) && ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502))) { xscope=0; decision(1,12,0,0,0); }"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { control(1708800,998400,6,6,1,2016000,1536000,2,2,1,0,0,0,0,0,430000000,267000000,1,1,1,262156); } else if (perfmode == 1) { control(1708800,998400,6,6,1,2016000,1536000,2,2,1,0,0,0,0,0,430000000,267000000,1,1,1,-1); } else if (perfmode == 2) { control(1708800,1209600,6,6,1,2016000,2016000,2,2,1,0,0,0,0,0,430000000,355000000,1,1,1,262156); } } need_update = 0;",
                    "cluster":"OcingWorker"
               },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(14, 2, 10000, 0, 0); decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.tmgp.sgame": {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(13, 98, 92, 0, 0);}"
                }
            },
            "com.netease.my" : {
                "enable" : 1,
                "layer" : "com.netease.my/com.netease.my.Client#0",
                "rules" : "print ^sceneId; print _sceneId; if (_targetFps != -1) { FPS = _targetFps; } if ((_renderTid != -1) && (_renderTid != ^renderTid)) { decision(14,1,0,2,_renderTid); } if ((_logicalTid != -1) && (_logicalTid != ^logicalTid)) { decision(14,1,0,2,_logicalTid); } if ((dcm == 7) && ((_sceneId == 8) || (_sceneId == 33))) { decision(9,1,0,0,0); dcm = -7; } if ((dcm == 8) && (_sceneId != 8) && (_sceneId != -1)) { decision(9,1,0,0,0); dcm = -8; } if (_sceneId == 7) { decision(9,0,0,0,0); dcm = 7; } if (_sceneId == 8) { decision(9,0,0,0,0); dcm = 8; } if ((FPS == 60) && (fpsmode != 60)) { control(1708800,576000,4,4,1,2016000,1363200,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,262156); fpsmode = 60; if (dcm > 0) { decision(9,1,0,0,0); decision(9,0,0,0,0); } } if ((FPS == 30) && (fpsmode != 30)) { control(1708800,300000,4,4,1,2016000,652800,2,1,1,0,0,0,0,0,504000000,180000000,1,1,1,262156); fpsmode = 30; if (dcm > 0) { decision(9,1,0,0,0); decision(9,0,0,0,0); } } if ((_sceneId == 33) && (fpsmode != 15)) { control(1708800,300000,6,2,1,1132800,300000,2,0,1,0,0,0,0,0,180000000,180000000,1,1,1,12); fpsmode = 15; if (dcm > 0) { decision(9,1,0,0,0); decision(9,0,0,0,0); } } if ((fpsmode != 15) && ((_sceneId == 5) || (_sceneId == 34))) { decision(1,12,1000,0,0); } if ((fpsmode != 15) && (_sceneId == 35)) { decision(1,12,0,0,0); } if ((fpsmode != 15) && (_displayNum >= 20) && ((_displayNum - ^displayNum) > 10)) { decision(1,12,2000,0,0); }",
                "dc_config":{"targetFps":"key7", "imageQuality":"key8", "sceneId":"key9"}
            }
        }
    },
    "SDM660": {
        "gpu_freq_table_path": "/sys/devices/soc/5000000.qcom,kgsl-3d0/kgsl/kgsl-3d0/freq_table_mhz",
        "gpu_freq_stat_path": "/sys/devices/soc/5000000.qcom,kgsl-3d0/kgsl/kgsl-3d0/gpu_clock_stats",
        "oifacegame": {
            "com.tencent.tmgp.sgame" : {
               "fb_enable": 1,
               "fb_action": 12
            }
        },
        "sdk": {
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1,15,15000,0,0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (_sceneId == 100)) { loading=0; decision(1, 15, 0, 0, 0); decision(9, 3, 0, 0, 0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump=1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump=0; decision(1,15,0,0,0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(8, 48, 0, 0, 0); decision(9, 1, 0, 0, 0); }"
            },
            "com.netease.hyxd.nearme.gamecenter": {
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 20000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); } if ((^sceneId != 100) && (_sceneId == 100)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "fb_enable": 1,
                "fb_action": 12
            }
        }
    },
    "SDM710": {
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "oifacegame": {
            "com.tencent.tmgp.sgame" : {
               "fb_enable": 1
            },
            "com.tencent.tmgp.sgamece" : {
               "fb_enable": 1
            },
            "com.ngame.allstar.eu": {
                "fb_enable": 1
            },
            "com.garena.game.kgtw": {
                "fb_enable": 1
            }
        },
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "fb_enable": 1,
                "fb_action": 15,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); control(1708800,998400,4,4,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,15,0,0,0); } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if ((target_fps == 60) || (final_table == 1) || ((target_fps == 40) && (target_quality == 5))) { control(1708800,1209600,6,4,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,355000000,1,1,1,12); } else if (target_fps == 40) { control(1708800,998400,6,4,1,2208000,1363200,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,12); } else { control(1708800,998400,4,4,1,2208000,979200,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,12); } } else if (perfmode == 1) { control(1708800,998400,6,4,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,-1); } else if (perfmode == 2) { control(1708800,998400,6,4,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); control(1708800,998400,4,4,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,15,0,0,0); } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_7 != -1) { target_fps = _7; need_update = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if ((target_fps == 60) || (final_table == 1) || ((target_fps == 40) && (target_quality == 5))) { control(1708800,1209600,6,4,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,355000000,1,1,1,12); } else if (target_fps == 40) { control(1708800,998400,6,4,1,2208000,1363200,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,12); } else { control(1708800,998400,4,4,1,2208000,979200,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,12); } } else if (perfmode == 1) { control(1708800,998400,6,4,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,-1); } else if (perfmode == 2) { control(1708800,998400,6,4,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.ig":{
                "fb_enable": 1,
                "fb_action": 15,
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(8, 97, 0, 0, 0); decision(13, 98, 92, 0, 0); control(1708800,998400,6,4,1,2208000,1363200,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,12); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1708800,998400,6,4,1,2208000,1363200,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,-1); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { decision(1, 15, 90000, 0, 0); jump = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; decision(1,15,0,0,0); } if ((xscope != 1) && ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501))) { decision(1,12,5000,0,0); xscope=1; } if ((xscope == 1) && ((_sceneId == 202) || (_sceneId == 302) || (_sceneId == 402) || (_sceneId == 502))) { xscope=0; decision(1,12,0,0,0); }"
            },
            "com.taobao.taobao":{
                "enable":1,
                "rules": "print ^sceneId; print _sceneId; if ((_sceneId == 1) && (^sceneId == -1)) { decision(1,13,3000,0,0); } if ((_sceneId == 2)) { decision(1,12,1000,0,0); } if (((_sceneId == 3) && (^sceneId != 3)) || ((_sceneId == 5) && (^sceneId != 5)) || ((_sceneId == 6) && (^sceneId !=6)) || ((_sceneId == 7) && (^sceneId != 7)) || ((_sceneId == 18) && (^sceneId != 18))) { decision(1,12,1000,0,0); } if ((_sceneId == 8)) { decision(1,12,2000,0,0); } if ((_sceneId == 10)) { decision(1,12,1000,0,0); } if ((_sceneId == 12)) { decision(1,12,500,0,0); } if ((_sceneId == 13)) { decision(1,12,500,0,0); } if ((_sceneId == 14)) { decision(1,12,500,0,0); } if ((_sceneId == 16)) { decision(1,12,2000,0,0); } if ((_sceneId == 19)) { decision(1,12,500,0,0); }"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 22000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); need_update = 1; game_started = 1; } if ((^sceneId != 100) && (_sceneId == 100)) { decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (need_update == 1) { if (perfmode == 0) { if(target_fps == 60 ){ control(1708000,1324800,6,6,1,2208000,1747200,2,2,1,0,0,0,0,0,504000000,430000000,1,1,1,12); } else if(target_fps == 30 ) { control(1708000,1209600 ,6,3,1,2208000,1363200,2,2,1,0,0,0,0,0,504000000,355000000,1,1,1,12); } else if(target_fps == 40 ) { control(1708000,1324800 ,6,5,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,355000000,1,1,1,12); } else { control(1708000,998400,6,3,1,2208000,1132800,2,2,1,0,0,0,0,0,504000000,355000000,1,1,1,-1); } } else if (perfmode == 1) { control(1708000,1612800,4,4,1,2208000,1132800,3,2,1,0,0,0,0,0,504000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1708000,1516800,6,6,1,2208000,2054400,2,2,1,0,0,0,0,0,504000000,430000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 22000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); need_update = 1; game_started = 1; } if ((^sceneId != 100) && (_sceneId == 100)) { decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); control(1766400,902400,4,4,1,1766000,1536000,3,2,1,0,0,0,0,0,710000000,257000000,1,1,1,-1); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1)) { if (need_update == 1) { if (perfmode == 0) { if(target_fps == 60 ){ control(1708000,1324800,6,6,1,2208000,1747200,2,2,1,0,0,0,0,0,504000000,430000000,1,1,1,12); } else if(target_fps == 30 ) { control(1708000,1209600 ,6,3,1,2208000,1363200,2,2,1,0,0,0,0,0,504000000,355000000,1,1,1,12); } else if(target_fps == 40 ) { control(1708000,1324800 ,6,5,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,355000000,1,1,1,12); } else { control(1708000,998400,6,3,1,2208000,1132800,2,2,1,0,0,0,0,0,504000000,355000000,1,1,1,-1); } } else if (perfmode == 1) { control(1708000,1612800,4,4,1,2208000,1132800,3,2,1,0,0,0,0,0,504000000,257000000,1,1,1,-1); } else if (perfmode == 2) { control(1708000,1516800,6,6,1,2208000,2054400,2,2,1,0,0,0,0,0,504000000,430000000,1,1,1,12); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { control(1708800,998400,6,4,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,262156); } else if (perfmode == 1) { control(1708800,998400,6,6,1,2208000,1536000,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,-1); } else if (perfmode == 2) { control(1708800,1209600,6,6,1,2208000,1996800,2,2,1,0,0,0,0,0,504000000,430000000,1,1,1,262156); } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(14, 2, 10000, 0, 0); decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.aniplex.fategrandorder": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0);} if (_fg == 0) { decision(21, 0, 0, 0, 0);}"
                }
            },
            "com.netease.my" : {
                "enable" : 1,
                "layer" : "com.netease.my/com.netease.my.Client#0",
                "rules" : "print ^sceneId; print _sceneId; if (_targetFps != -1) { FPS = _targetFps; } if ((_renderTid != -1) && (_renderTid != ^renderTid)) { decision(14,1,0,2,_renderTid); } if ((_logicalTid != -1) && (_logicalTid != ^logicalTid)) { decision(14,1,0,2,_logicalTid); } if ((dcm == 7) && ((_sceneId == 8) || (_sceneId == 33))) { decision(9,1,0,0,0); dcm = -7; } if ((dcm == 8) && (_sceneId != 8) && (_sceneId != -1)) { decision(9,1,0,0,0); dcm = -8; } if (_sceneId == 7) { decision(9,0,0,0,0); dcm = 7; } if (_sceneId == 8) { decision(9,0,0,0,0); dcm = 8; } if ((FPS == 60) && (fpsmode != 60)) { control(1708800,576000,4,4,1,2208000,1363200,2,2,1,0,0,0,0,0,504000000,267000000,1,1,1,262156); fpsmode = 60; if (dcm > 0) { decision(9,1,0,0,0); decision(9,0,0,0,0); } } if ((FPS == 30) && (fpsmode != 30)) { control(1708800,300000,4,4,1,2054400,652800,2,1,1,0,0,0,0,0,504000000,180000000,1,1,1,262156); fpsmode = 30; if (dcm > 0) { decision(9,1,0,0,0); decision(9,0,0,0,0); } } if ((_sceneId == 33) && (fpsmode != 15)) { control(1708800,300000,6,2,1,1132800,300000,2,0,1,0,0,0,0,0,180000000,180000000,1,1,1,12); fpsmode = 15; if (dcm > 0) { decision(9,1,0,0,0); decision(9,0,0,0,0); } } if ((fpsmode != 15) && ((_sceneId == 5) || (_sceneId == 34))) { decision(1,12,1000,0,0); } if ((fpsmode != 15) && (_sceneId == 35)) { decision(1,12,0,0,0); } if ((fpsmode != 15) && (_displayNum >= 20) && ((_displayNum - ^displayNum) > 10)) { decision(1,12,2000,0,0); }",
                "dc_config":{"targetFps":"key7", "imageQuality":"key8", "sceneId":"key9"}
            }
        }
    },
    "SDM712": {
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); decision(1,15,5000,0,0); need_update = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; } } if (_8 != -1) { target_quality = _8; } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 40) { if (jump == 1) { decision(17, -1, 20, 4, 0); } else if (final_table == 1) { decision(17, -1, 100, 9, 0); } else { if (perfmode == 2) { decision(17, -1, 100, 10, 0); } else { decision(17, -1, 100, 12, 0); } } } else { decision(17, -1, 100, 20, 0); } } } need_update = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); decision(1,15,5000,0,0); need_update = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; } } if (_8 != -1) { target_quality = _8; } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 40) { if (jump == 1) { decision(17, -1, 20, 4, 0); } else if (final_table == 1) { decision(17, -1, 100, 9, 0); } else { if (perfmode == 2) { decision(17, -1, 100, 10, 0); } else { decision(17, -1, 100, 12, 0); } } } else { decision(17, -1, 100, 20, 0); } } } need_update = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); decision(1,15,5000,0,0); need_update = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; } } if (_8 != -1) { target_quality = _8; } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 40) { if (jump == 1) { decision(17, -1, 20, 4, 0); } else if (final_table == 1) { decision(17, -1, 100, 9, 0); } else { if (perfmode == 2) { decision(17, -1, 100, 10, 0); } else { decision(17, -1, 100, 12, 0); } } } else { decision(17, -1, 100, 20, 0); } } } need_update = 0;"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 12, 0, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(17, -1, 0, 0, 0); decision(20, 0, 0, 0, 0); decision(1, 15, 5000, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } else if (target_fps >= 40) { decision(17, -1, 100, 12, 0); } else { decision(17, -1, 100, 20, 0); } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 12, 0, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(17, -1, 0, 0, 0); decision(20, 0, 0, 0, 0); decision(1, 15, 5000, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } else if (target_fps >= 40) { decision(17, -1, 100, 12, 0); } else { decision(17, -1, 100, 20, 0); } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 10, 0); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; }"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 10, 0); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; }"
            },
            "com.tencent.af": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.tencent.aft": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { decision(17, -1, 10, 2, 0); } else if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else if (perfmode == 2) { decision(17, -1, 20, 2, 0);; } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(14, 2, 10000, 0, 0); decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "cluster": "NativeThread"
                },
                "com.netease.hyxd": {
                    "enable" : 1,
                    "rules": "if (_fg == 1) { decision(17, -1, 20, 3, 0); }"
                }
            }
        }
    },
    "SDM7150": {
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 1, 1, 12, 200); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 0); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); need_update = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; } } if (_8 != -1) { target_quality = _8; } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); } else { if (target_fps >= 60) { control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,12); if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); } else { decision(17, -1, 0, 0, 0); control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); } } } need_update = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 1, 1, 12, 200); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 0); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); need_update = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; } } if (_8 != -1) { target_quality = _8; } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); } else { if (target_fps >= 60) { control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,12); if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); } else { decision(17, -1, 0, 0, 0); control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); } } } need_update = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 1, 1, 12, 200); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 0); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); need_update = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; } } if (_8 != -1) { target_quality = _8; } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); } else { if (target_fps >= 60) { control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,12); if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); } else { decision(17, -1, 0, 0, 0); control(1804800,1017600,6,6,1,2208000,1555200,2,2,1,0,0,0,0,0,700000000,565000000,1,1,1,-1); } } } need_update = 0;"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 17, -1, 100); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 17, -1, 100); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; }"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 17, -1, 100); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 17, -1, 100); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; }"
            },
            "com.tencent.af": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; decision(1, 13, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.tencent.aft": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; decision(1, 13, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { decision(17, -1, 10, 2, 0); } else if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else if (perfmode == 2) { decision(17, -1, 20, 2, 0);; } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster":"Thread-2",
                    "rules": "if (_fg == 1) {decision(14, 1, 3000, 0, 0); decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0);} if (_fg == 0) { decision(21, 0, 0, 0, 0);}"
                },
                "com.netease.hyxd": {
                    "enable" : 1,
                    "rules": "if (_fg == 1) { decision(17, -1, 20, 3, 0); }"
                },
                "com.superevilmegacorp.game": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.superevilmegacorp.game.nearme.gamecenter": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game.nearme.gamecenter/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                }
            }
        }
    },
    "SDM6125": {
        "gpu_freq_table_path": "/sys/devices/platform/soc/5900000.qcom,kgsl-3d0/kgsl/kgsl-3d0/freq_table_mhz",
        "gpu_freq_stat_path": "/sys/devices/platform/soc/5900000.qcom,kgsl-3d0/kgsl/kgsl-3d0/gpu_clock_stats",
        "brightness_path":"/sys/devices/platform/soc/5e00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,864000,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,-1); decision(20, 0, 1, 12, 100); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,20000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { target_fps = _7; } if (_8 != -1) { target_quality = _8; } if(_54 != -1) { anti_aliasing = _54; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if ((target_fps == 60) || (final_table == 1) || (jump == 1) || ((target_fps == 40) && (target_quality == 5))) { control(1804800,1305600,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else if (target_fps == 40) { if (anti_aliasing == 1){ control(1804800,1305600,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,1305600,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } else if (target_fps == 30) { if (anti_aliasing == 1){ control(1804800,1017600,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,1017600,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } else { if (anti_aliasing == 1){ control(1804800,1017600,4,4,1,2016000,1056000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,864000,4,4,1,2016000,1056000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } } else if (perfmode == 1) { control(1804800,864000,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,9000000000,320000000,1,1,1,-1); } else if (perfmode == 2) { control(1804800,1305600,4,4,1,2016000,1804800,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); decision(20, 1, 1, 12, 100); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,864000,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,-1); decision(20, 0, 1, 12, 100); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,20000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { target_fps = _7; } if (_8 != -1) { target_quality = _8; } if(_54 != -1) { anti_aliasing = _54; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if ((target_fps == 60) || (final_table == 1) || (jump == 1) || ((target_fps == 40) && (target_quality == 5))) { control(1804800,1305600,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else if (target_fps == 40) { if (anti_aliasing == 1){ control(1804800,1305600,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,1305600,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } else if (target_fps == 30) { if (anti_aliasing == 1){ control(1804800,1017600,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,1017600,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } else { if (anti_aliasing == 1){ control(1804800,1017600,4,4,1,2016000,1056000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,864000,4,4,1,2016000,1056000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } } else if (perfmode == 1) { control(1804800,864000,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,9000000000,320000000,1,1,1,-1); } else if (perfmode == 2) { control(1804800,1305600,4,4,1,2016000,1804800,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); decision(20, 1, 1, 12, 100); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if (((^sceneId != 104) && (^sceneId != 106) && (^sceneId != 108)) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,864000,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,-1); decision(20, 0, 1, 12, 100); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,20000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId == 100)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_7 != -1) { target_fps = _7; } if (_8 != -1) { target_quality = _8; } if(_54 != -1) { anti_aliasing = _54; } if ((game_started == 1) && (fg == 1)) { if (perfmode == 2) { if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501)) { decision(1, 12, 3000, 0, 0); } } if (need_update == 1) { if (perfmode == 0) { if ((target_fps == 60) || (final_table == 1) || (jump == 1) || ((target_fps == 40) && (target_quality == 5))) { control(1804800,1305600,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else if (target_fps == 40) { if (anti_aliasing == 1){ control(1804800,1305600,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,1305600,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } else if (target_fps == 30) { if (anti_aliasing == 1){ control(1804800,1017600,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,1017600,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } else { if (anti_aliasing == 1){ control(1804800,1017600,4,4,1,2016000,1056000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,864000,4,4,1,2016000,1056000,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } } else if (perfmode == 1) { control(1804800,864000,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,9000000000,320000000,1,1,1,-1); } else if (perfmode == 2) { control(1804800,1305600,4,4,1,2016000,1804800,4,4,1,0,0,0,0,0,900000000,320000000,1,1,1,12); decision(20, 1, 1, 12, 100); } else { print 4444; print perfmode; } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 100); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 100); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; }"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 100); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 1, 12, 100); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; }"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 10000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1, 15, 22000, 0, 0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(1, 15, 0, 0, 0); decision(9, 3, 0, 0, 0); } if ((game_started != 1) && (_sceneId != -1) && (_sceneId != 3) && (_sceneId != 4) && (_sceneId != 5)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(13, 88, 78, 0, 0); decision(17, 10, 0, 0, 0); need_update = 1; } if (game_started == 1) { if (((^sceneId != 6) && (_sceneId == 6)) && (target_fps == 60)) { high_load_scene = 1; need_update = 1; } else if (((^sceneId != 103) && (_sceneId == 103)) || ((^sceneId != 100) && (_sceneId == 100))) { if((target_fps == 60) || (target_fps == 40)) { high_load_scene = 2; need_update = 1; } } else if ((_sceneId != -1) && (_sceneId != 6) && (_sceneId != 103) && (_sceneId != 100) && (_sceneId != 101)) { high_load_scene = 0; need_update = 1; } high_load_scene = 0; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(17, 0, 0, 0, 0); control(1804800,576000,4,2,1,2016000,652800,3,2,1,0,0,0,0,0,900000000,320000000,1,1,1,-1); decision(1, 15, 5000, 0, 0); decision(20, 0, 1, 12, 100); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1 && _targetFPS != target_fps) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1) && need_update == 1) { if (perfmode == 1) { control(1804800,576000,4,2,1,2016000,652800,4,2,1,0,0,0,0,0,900000000,465000000,1,1,1,-1); } else { if (high_load_scene == 1) { control(1804800,1420800,4,2,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,465000000,1,1,1,12); } else if (high_load_scene == 2) { control(1804800,1305600,4,2,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,465000000,1,1,1,12); } else { if (perfmode == 0) { if(target_fps == 60 ) { control(1804800,1305600,4,2,1,2016000,1401600,4,3,1,0,0,0,0,0,900000000,465000000,1,1,1,12); } else if(target_fps == 30 ) { control(1804800,864000,4,2,1,2016000,902400,4,3,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else if(target_fps == 40 ) { control(1804800,1017600,4,2,1,2016000,1056000,4,3,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,864000,4,2,1,2016000,1056000,4,3,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } else if (perfmode == 2) { control(1804800,1305600,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,950000000,465000000,1,1,1,12); decision(20, 1, 1, 12, 100); } }; decision(1, 13, 3000, 0, 0); } print perfmode; } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 10000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1, 15, 22000, 0, 0); decision(9, 2, 0, 0, 0); } if ((loading == 1) && (^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(1, 15, 0, 0, 0); decision(9, 3, 0, 0, 0); } if ((game_started != 1) && (_sceneId != -1) && (_sceneId != 3) && (_sceneId != 4) && (_sceneId != 5)) { game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(13, 88, 78, 0, 0); decision(17, 10, 0, 0, 0); need_update = 1; } if (game_started == 1) { if (((^sceneId != 6) && (_sceneId == 6)) && (target_fps == 60)) { high_load_scene = 1; need_update = 1; } else if (((^sceneId != 103) && (_sceneId == 103)) || ((^sceneId != 100) && (_sceneId == 100))) { if((target_fps == 60) || (target_fps == 40)) { high_load_scene = 2; need_update = 1; } } else if ((_sceneId != -1) && (_sceneId != 6) && (_sceneId != 103) && (_sceneId != 100) && (_sceneId != 101)) { high_load_scene = 0; need_update = 1; } high_load_scene = 0; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(17, 0, 0, 0, 0); control(1804800,576000,4,2,1,2016000,652800,3,2,1,0,0,0,0,0,900000000,320000000,1,1,1,-1); decision(1, 15, 5000, 0, 0); decision(20, 0, 1, 12, 100); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1 && _targetFPS != target_fps) { target_fps = _targetFPS; need_update = 1; } if(((^sceneId != 7) && (^sceneId != 103)) && ((_sceneId == 7) || (_sceneId == 103))) { need_update = 1; } if ((game_started == 1) && (fg == 1) && need_update == 1) { if (perfmode == 1) { control(1804800,576000,4,2,1,2016000,652800,4,2,1,0,0,0,0,0,900000000,465000000,1,1,1,-1); } else { if (high_load_scene == 1) { control(1804800,1420800,4,2,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,465000000,1,1,1,12); } else if (high_load_scene == 2) { control(1804800,1305600,4,2,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,465000000,1,1,1,12); } else { if (perfmode == 0) { if(target_fps == 60 ) { control(1804800,1305600,4,2,1,2016000,1401600,4,3,1,0,0,0,0,0,900000000,465000000,1,1,1,12); } else if(target_fps == 30 ) { control(1804800,864000,4,2,1,2016000,902400,4,3,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else if(target_fps == 40 ) { control(1804800,1017600,4,2,1,2016000,1056000,4,3,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } else { control(1804800,864000,4,2,1,2016000,1056000,4,3,1,0,0,0,0,0,900000000,320000000,1,1,1,12); } } else if (perfmode == 2) { control(1804800,1305600,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,950000000,465000000,1,1,1,12); decision(20, 1, 1, 12, 100); } }; decision(1, 13, 3000, 0, 0); } print perfmode; } need_update = 0;"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { control(1804800,864000,4,4,1,2016000,1401600,4,4,1,0,0,0,0,0,900000000,465000000,1,1,1,262156); } else if (perfmode == 1) { control(1804800,864000,4,4,1,2016000,1401600,4,2,1,0,0,0,0,0,900000000,465000000,1,1,1,-1); } else if (perfmode == 2) { control(1804800,1305600,4,4,1,2016000,1536000,4,4,1,0,0,0,0,0,900000000,745000000,1,1,1,262156); } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) { decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "rules": "if (_fg == 1) { decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.ngame.allstar.eu" : {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) { decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.ig": {
                    "enable": 1,
                    "rules": "if (_fg == 1) { decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                }
            }
        }
    },
    "SDM7250": {
        "gpu_freq_table_path": "/sys/devices/platform/soc/3d00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/freq_table_mhz",
        "gpu_freq_stat_path": "/sys/devices/platform/soc/3d00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/gpu_clock_stats",
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501) || (_sceneId == 601) || (_sceneId == 701)) { decision(19, 1, 0, 0, 0); } if (((^sceneId == 201) || (^sceneId == 301) || (^sceneId == 401) || (^sceneId == 501) || (^sceneId == 601) || (^sceneId == 701)) && (_sceneId != -1) && (_sceneId != 900)) { decision(19, 0, 0, 0, 0); } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); control(1651200,300000,6,6,1,1900800,940800,1,1,1,2188800,1094400,1,1,1,500000000,275000000,1,1,1,99); control(1804800,614000,6,6,1,2092800,1152000,1,1,1,2304000,1401600,1,1,1,625000000,275000000,1,1,1,100); decision(20, 4, 12, 77, target_fps); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); control(1804800,614000,6,6,1,2092800,1152000,1,1,1,2304000,1401600,1,1,1,625000000,275000000,1,1,1,-1); decision(20, 0, 12, 77, target_fps); need_update = 0; } if ((^sceneId < 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1651200,300000,6,6,1,1728000,652800,1,1,1,1996800,806400,1,1,1,500000000,275000000,1,1,1,12); } else { if (target_fps >= 60) { control(1651200,576000,6,6,1,1900800,1152000,1,1,1,2188800,1094400,1,1,1,625000000,275000000,1,1,1,99); control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,100); if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,12); } else { control(1651200,576000,6,6,1,1900800,1152000,1,1,1,2188800,1094400,1,1,1,625000000,275000000,1,1,1,99); control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,12); } else { control(1651200,576000,6,6,1,1900800,940800,1,1,1,2188800,1094400,1,1,1,625000000,275000000,1,1,1,99); control(1804800,614400,6,6,1,2092800,1152000,1,1,1,2304000,1094400,1,1,1,625000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501) || (_sceneId == 601) || (_sceneId == 701)) { decision(19, 1, 0, 0, 0); } if (((^sceneId == 201) || (^sceneId == 301) || (^sceneId == 401) || (^sceneId == 501) || (^sceneId == 601) || (^sceneId == 701)) && (_sceneId != -1) && (_sceneId != 900)) { decision(19, 0, 0, 0, 0); } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); control(1651200,300000,6,6,1,1900800,940800,1,1,1,2188800,1094400,1,1,1,500000000,275000000,1,1,1,99); control(1804800,614000,6,6,1,2092800,1152000,1,1,1,2304000,1401600,1,1,1,625000000,275000000,1,1,1,100); decision(20, 4, 12, 77, target_fps); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); control(1804800,614000,6,6,1,2092800,1152000,1,1,1,2304000,1401600,1,1,1,625000000,275000000,1,1,1,-1); decision(20, 0, 12, 77, target_fps); need_update = 0; } if ((^sceneId < 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1651200,300000,6,6,1,1728000,652800,1,1,1,1996800,806400,1,1,1,500000000,275000000,1,1,1,12); } else { if (target_fps >= 60) { control(1651200,576000,6,6,1,1900800,1152000,1,1,1,2188800,1094400,1,1,1,625000000,275000000,1,1,1,99); control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,100); if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,12); } else { control(1651200,576000,6,6,1,1900800,1152000,1,1,1,2188800,1094400,1,1,1,625000000,275000000,1,1,1,99); control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,12); } else { control(1651200,576000,6,6,1,1900800,940800,1,1,1,2188800,1094400,1,1,1,625000000,275000000,1,1,1,99); control(1804800,614400,6,6,1,2092800,1152000,1,1,1,2304000,1094400,1,1,1,625000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; if ((_sceneId == 201) || (_sceneId == 301) || (_sceneId == 401) || (_sceneId == 501) || (_sceneId == 601) || (_sceneId == 701)) { decision(19, 1, 0, 0, 0); } if (((^sceneId == 201) || (^sceneId == 301) || (^sceneId == 401) || (^sceneId == 501) || (^sceneId == 601) || (^sceneId == 701)) && (_sceneId != -1) && (_sceneId != 900)) { decision(19, 0, 0, 0, 0); } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); control(1651200,300000,6,6,1,1900800,940800,1,1,1,2188800,1094400,1,1,1,500000000,275000000,1,1,1,99); control(1804800,614000,6,6,1,2092800,1152000,1,1,1,2304000,1401600,1,1,1,625000000,275000000,1,1,1,100); decision(20, 4, 12, 77, target_fps); need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); control(1804800,614000,6,6,1,2092800,1152000,1,1,1,2304000,1401600,1,1,1,625000000,275000000,1,1,1,-1); decision(20, 0, 12, 77, target_fps); need_update = 0; } if ((^sceneId < 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1651200,300000,6,6,1,1728000,652800,1,1,1,1996800,806400,1,1,1,500000000,275000000,1,1,1,12); } else { if (target_fps >= 60) { control(1651200,576000,6,6,1,1900800,1152000,1,1,1,2188800,1094400,1,1,1,625000000,275000000,1,1,1,99); control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,100); if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,12); } else { control(1651200,576000,6,6,1,1900800,1152000,1,1,1,2188800,1094400,1,1,1,625000000,275000000,1,1,1,99); control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,400000000,1,1,1,12); } else { control(1651200,576000,6,6,1,1900800,940800,1,1,1,2188800,1094400,1,1,1,625000000,275000000,1,1,1,99); control(1804800,614400,6,6,1,2092800,1152000,1,1,1,2304000,1094400,1,1,1,625000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_fg == 1) { need_update_smartfreq = 1; } if (_7 > 29) { target_fps = _7; need_update_smartfreq = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); control(1651200,691200,6,6,1,1708000,652800,1,1,1,1996800,1094400,1,1,1,400000000,275000000,1,1,1,99); control(1804800,691200,6,6,1,2092800,1152000,1,1,1,2304000,1094400,1,1,1,625000000,275000000,1,1,1,100); decision(20, 3, 12, 70, target_fps); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 12, -1, 0); control(1804800,691200,6,6,1,2054400,1056000,1,1,1,2304000,1094400,1,1,1,625000000,275000000,1,1,1,-1); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((need_update_smartfreq == 1) && (game_started == 1)) { control(1651200,691200,6,6,1,1708000,652800,1,1,1,1996800,1094400,1,1,1,400000000,275000000,1,1,1,99); control(1804800,691200,6,6,1,2092800,1152000,1,1,1,2304000,1094400,1,1,1,625000000,275000000,1,1,1,100); } need_update_smartfreq = 0;"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_fg == 1) { need_update_smartfreq = 1; } if (_7 > 29) { target_fps = _7; need_update_smartfreq = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); control(1651200,691200,6,6,1,1708000,652800,1,1,1,1996800,1094400,1,1,1,400000000,275000000,1,1,1,99); control(1804800,691200,6,6,1,2092800,1152000,1,1,1,2304000,1094400,1,1,1,625000000,275000000,1,1,1,100); decision(20, 3, 12, 70, target_fps); } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 12, -1, 0); control(1804800,691200,6,6,1,2054400,1056000,1,1,1,2304000,1094400,1,1,1,625000000,275000000,1,1,1,-1); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((need_update_smartfreq == 1) && (game_started == 1)) { control(1651200,691200,6,6,1,1708000,652800,1,1,1,1996800,1094400,1,1,1,400000000,275000000,1,1,1,99); control(1804800,691200,6,6,1,2092800,1152000,1,1,1,2304000,1094400,1,1,1,625000000,275000000,1,1,1,100); } need_update_smartfreq = 0;"
            },
            "com.tencent.af": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; decision(1, 13, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.tencent.aft": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { loading = 0; decision(1, 13, 0, 0, 0); } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.tencent.tmgp.sgame": {
                "rules": "perfmode = ^perfmode; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; if (perfmode == 1) { control(1651200,300000,6,6,1,1900800,652800,1,1,1,1996800,806400,1,1,1,625000000,500000000,1,1,1,12); } else if (perfmode == 2) { control(1804800,614400,6,6,1,2208000,1152000,1,1,1,2400000,1401600,1,1,1,625000000,500000000,1,1,1,12); } else { control(1804800,300000,6,6,1,2208000,652800,1,1,1,2400000,806400,1,1,1,625000000,500000000,1,1,1,12); } }"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { decision(17, -1, 10, 2, 0); } else if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else if (perfmode == 2) { decision(17, -1, 20, 2, 0);; } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster":"Thread-2",
                    "rules": "if (_fg == 1) {decision(14, 1, 3000, 0, 0); decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.ig": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.minitech.miniworld.nearme.gamecenter": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(17, -1, 20, 2, 0);} if (_fg == 0) {decision(17, -1, 0, 0, 0);}"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable": 1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0);decision(8, 97, 0, 0, 0)} if (_perfmode == 1) { control(1651200,300000,6,6,1,1900800,652800,1,1,1,1996800,806400,1,1,1,625000000,500000000,1,1,1,12);} if (_fg == 0) { decision(21, 0, 0, 0, 0);decision(8, 48, 0, 0, 0);control(1651200,300000,6,6,1,1900800,652800,1,1,1,1996800,806400,1,1,1,625000000,500000000,1,1,1,-1);}"
                },
                "com.ngame.allstar.eu": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.netease.hyxd": {
                    "enable" : 1,
                    "rules": "if (_fg == 1) { decision(17, -1, 20, 3, 0); }"
                },
                "com.superevilmegacorp.game": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.superevilmegacorp.game.nearme.gamecenter": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game.nearme.gamecenter/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                }
            }
        }
    },
    "SDM8250": {
        "gpu_freq_table_path": "/sys/devices/platform/soc/3d00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/freq_table_mhz",
        "gpu_freq_stat_path": "/sys/devices/platform/soc/3d00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/gpu_clock_stats",
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^perfmode == 0) && (_perfmode == 0)) { need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; if (target_fps > 60){ decision(26, 2, 1, 0, 0); } else { decision(26, 2, 0, 0, 0); } } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2419200,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 4, 12, 77, target_fps); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,403200,4,4,1,2419200,825600,3,3,1,2745600,1075200,1,1,1,587000000,400000000,1,1,1,-1); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); decision(26, 2, 0, 0, 0); need_update = 0; decision(20, 0, 12, 77, target_fps); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 2) { decision(26, 2, 1, 0, 0); } decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,403200,4,4,1,1958400,710400,3,3,1,1977600,844800,1,1,1,587000000,305000000,1,1,1,12); } else { if (target_fps >= 60) { if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,1171200,3,3,1,2841600,1075200,1,1,1,587000000,400000000,1,1,1,12); } else { if (target_quality > 4) { control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } control(1804800,403200,4,4,1,2246400,1056000,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1670400,710400,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,710400,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^perfmode == 0) && (_perfmode == 0)) { need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; if (target_fps > 60){ decision(26, 2, 1, 0, 0); } else { decision(26, 2, 0, 0, 0); } } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2419200,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 4, 12, 77, target_fps); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,403200,4,4,1,2419200,825600,3,3,1,2745600,1075200,1,1,1,587000000,400000000,1,1,1,-1); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); decision(26, 2, 0, 0, 0); need_update = 0; decision(20, 0, 12, 77, target_fps); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 2) { decision(26, 2, 1, 0, 0); } decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,403200,4,4,1,1958400,710400,3,3,1,1977600,844800,1,1,1,587000000,305000000,1,1,1,12); } else { if (target_fps >= 60) { if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,1171200,3,3,1,2841600,1075200,1,1,1,587000000,400000000,1,1,1,12); } else { if (target_quality > 4) { control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } control(1804800,403200,4,4,1,2246400,1056000,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1670400,710400,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,710400,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^perfmode == 0) && (_perfmode == 0)) { need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; if (target_fps > 60){ decision(26, 2, 1, 0, 0); } else { decision(26, 2, 0, 0, 0); } } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2419200,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 4, 12, 77, target_fps); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,403200,4,4,1,2419200,825600,3,3,1,2745600,1075200,1,1,1,587000000,400000000,1,1,1,-1); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); decision(26, 2, 0, 0, 0); need_update = 0; decision(20, 0, 12, 77, target_fps); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 2) { decision(26, 2, 1, 0, 0); } decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,403200,4,4,1,1958400,710400,3,3,1,1977600,844800,1,1,1,587000000,305000000,1,1,1,12); } else { if (target_fps >= 60) { if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,1171200,3,3,1,2841600,1075200,1,1,1,587000000,400000000,1,1,1,12); } else { if (target_quality > 4) { control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } control(1804800,403200,4,4,1,2246400,1056000,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1670400,710400,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,710400,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; print target_fps; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; } if (_fg == 1) { decision(25, 0, 787200, 1171200, 0); need_update_smartfreq = 1; } if (_fg == 0) { decision(25, -1, -1, -1, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if (_7 > 29) { target_fps = _7; need_update_smartfreq = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); decision(25, 0, 787200, 1171200, 0); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 12, -1, 0); control(1804800,691200,4,3,1,2419200,1056000,2,1,1,0,0,1,1,1,587000000,305000000,1,1,1,-1); decision(26, 2, 0, 0, 0); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((fg == 1) && (perfmode == 2) && (game_started == 1)) { decision(26, 2, 1, 0, 0); } if ((need_update_smartfreq == 1) && (game_started == 1)) { if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); } need_update_smartfreq = 0;"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; print target_fps; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; } if (_fg == 1) { decision(25, 0, 787200, 1171200, 0); need_update_smartfreq = 1; } if (_fg == 0) { decision(25, -1, -1, -1, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if (_7 > 29) { target_fps = _7; need_update_smartfreq = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); decision(25, 0, 787200, 1171200, 0); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 12, -1, 0); control(1804800,691200,4,3,1,2419200,1056000,2,1,1,0,0,1,1,1,587000000,305000000,1,1,1,-1); decision(26, 2, 0, 0, 0); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((fg == 1) && (perfmode == 2) && (game_started == 1)) { decision(26, 2, 1, 0, 0); } if ((need_update_smartfreq == 1) && (game_started == 1)) { if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); } need_update_smartfreq = 0;"
            },
            "com.tencent.af": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { decision(1, 13, 0, 0, 0); loading = 0; } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.tencent.aft": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { decision(1, 13, 0, 0, 0); loading = 0; } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.netease.lztg.nearme.gamecenter": {
                "enable":1,
                "rules":"print ^sceneId; print _sceneId; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); } if (_sceneId == 30900) { decision(15, 1, 0, 0 ,0); } if (_sceneId == 20300) { decision(15, 2, 0, 0 ,0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); }"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { decision(17, -1, 10, 2, 0); } else if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else if (perfmode == 2) { decision(17, -1, 20, 2, 0);; } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster":"Thread-2",
                    "rules": "if (_fg == 1) {decision(14, 1, 3000, 0, 0); decision(8, 97, 0, 0, 0);decision(25, 0, 787200, 1171200, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);decision(25, -1, -1, -1, 0);decision(26, 2, 0, 0, 0);}"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0); decision(8, 97, 0, 0, 0);decision(25, 0, 787200, 1171200, 0); decision(26, 2, 2, 0, 0);} if (_fg == 0) { decision(21, 0, 0, 0, 0); decision(8, 48, 0, 0, 0);decision(25, -1, -1, -1, 0);decision(26, 2, 0, 0, 0);}"
                },
                "com.netease.hyxd": {
                    "enable" : 1,
                    "rules": "if (_fg == 1) { decision(17, -1, 20, 3, 0); }"
                },
                "com.superevilmegacorp.game": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.superevilmegacorp.game.nearme.gamecenter": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game.nearme.gamecenter/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.tencent.ig": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.af": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {control(1804800,403200,4,4,1,2246400,710400,3,3,1,2553600,844800,1,1,1,587000000,305000000,1,1,1,12);} if (_fg == 0) {control(1804800,403200,4,4,1,2054400,710400,3,3,1,2361600,844800,1,1,1,587000000,305000000,1,1,1,-1);}"
                },
                "com.tencent.tmgp.speedmobile": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {control(1804800,403200,4,4,1,2246400,710400,3,3,1,2553600,844800,1,1,1,587000000,305000000,1,1,1,12);} if (_fg == 0) {control(1804800,403200,4,4,1,2054400,710400,3,3,1,2361600,844800,1,1,1,587000000,305000000,1,1,1,-1);decision(26, 2, 0, 0, 0);}"
                }
            }
        }
    },
    "SDM7125": {
        "gpu_freq_table_path": "/sys/devices/platform/soc/5000000.qcom,kgsl-3d0/kgsl/kgsl-3d0/freq_table_mhz",
        "gpu_freq_stat_path": "/sys/devices/platform/soc/5000000.qcom,kgsl-3d0/kgsl/kgsl-3d0/gpu_clock_stats",
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "<<pubgmhd_sdm7125.oc>>"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "<<pubgmhd_sdm7125.oc>>"
            },
            "com.tencent.ig":{
                "rules": "<<pubgmhd_sdm7125.oc>>"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "<<hyxd_sdm7125.oc>>"
            },
            "com.netease.hyxd":{
                "rules": "<<hyxd_sdm7125.oc>>"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": "<<speedmobile_sdm7125.oc>>"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": "<<speedmobile_sdm7125.oc>>"
            },
            "com.tencent.af": {
                "rules": "<<wpzs_sdm7125.oc>>"
            },
            "com.tencent.aft": {
                "rules": "<<wpzs_sdm7125.oc>>"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"<<pubgm_sdm7125.oc>>",
                    "cluster":"OcingWorker"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster":"NativeThread",
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0); decision(14, 1, 3000, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) { decision(1,12,30000,0,0); decision(8, 97, 0, 0, 0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(8, 48, 0, 0, 0); decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0);decision(8, 97, 0, 0, 0);} if (_fg == 0) { decision(21, 0, 0, 0, 0);decision(8, 48, 0, 0, 0);}"
                },
                "com.ngame.allstar.eu": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.netease.hyxd": {
                    "enable" : 1,
                    "rules": "if (_fg == 1) { decision(17, -1, 20, 3, 0); }"
                },
                "com.superevilmegacorp.game": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.superevilmegacorp.game.nearme.gamecenter": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game.nearme.gamecenter/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.tencent.ig": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                }
            }
        }
    },
    "SDM8350": {
        "gpu_freq_table_path": "/sys/devices/platform/soc/3d00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/freq_table_mhz",
        "gpu_freq_stat_path": "/sys/devices/platform/soc/3d00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/gpu_clock_stats",
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^perfmode == 0) && (_perfmode == 0)) { need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; if (target_fps > 60){ decision(26, 2, 1, 0, 0); } else { decision(26, 2, 0, 0, 0); } } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2419200,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 4, 12, 77, target_fps); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,403200,4,4,1,2419200,825600,3,3,1,2745600,1075200,1,1,1,587000000,400000000,1,1,1,-1); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); decision(26, 2, 0, 0, 0); need_update = 0; decision(20, 0, 12, 77, target_fps); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 2) { decision(26, 2, 1, 0, 0); } decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,403200,4,4,1,1958400,710400,3,3,1,1977600,844800,1,1,1,587000000,305000000,1,1,1,12); } else { if (target_fps >= 60) { if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,1171200,3,3,1,2841600,1075200,1,1,1,587000000,400000000,1,1,1,12); } else { if (target_quality > 4) { control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } control(1804800,403200,4,4,1,2246400,1056000,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1670400,710400,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,710400,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^perfmode == 0) && (_perfmode == 0)) { need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; if (target_fps > 60){ decision(26, 2, 1, 0, 0); } else { decision(26, 2, 0, 0, 0); } } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2419200,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 4, 12, 77, target_fps); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,403200,4,4,1,2419200,825600,3,3,1,2745600,1075200,1,1,1,587000000,400000000,1,1,1,-1); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); decision(26, 2, 0, 0, 0); need_update = 0; decision(20, 0, 12, 77, target_fps); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 2) { decision(26, 2, 1, 0, 0); } decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,403200,4,4,1,1958400,710400,3,3,1,1977600,844800,1,1,1,587000000,305000000,1,1,1,12); } else { if (target_fps >= 60) { if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,1171200,3,3,1,2841600,1075200,1,1,1,587000000,400000000,1,1,1,12); } else { if (target_quality > 4) { control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } control(1804800,403200,4,4,1,2246400,1056000,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1670400,710400,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,710400,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^perfmode == 0) && (_perfmode == 0)) { need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; if (target_fps > 60){ decision(26, 2, 1, 0, 0); } else { decision(26, 2, 0, 0, 0); } } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2419200,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 4, 12, 77, target_fps); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,403200,4,4,1,2419200,825600,3,3,1,2745600,1075200,1,1,1,587000000,400000000,1,1,1,-1); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); decision(26, 2, 0, 0, 0); need_update = 0; decision(20, 0, 12, 77, target_fps); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 2) { decision(26, 2, 1, 0, 0); } decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,403200,4,4,1,1958400,710400,3,3,1,1977600,844800,1,1,1,587000000,305000000,1,1,1,12); } else { if (target_fps >= 60) { if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,1171200,3,3,1,2841600,1075200,1,1,1,587000000,400000000,1,1,1,12); } else { if (target_quality > 4) { control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } control(1804800,403200,4,4,1,2246400,1056000,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1670400,710400,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,710400,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; print target_fps; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; } if (_fg == 1) { decision(25, 0, 787200, 1171200, 0); need_update_smartfreq = 1; } if (_fg == 0) { decision(25, -1, -1, -1, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if (_7 > 29) { target_fps = _7; need_update_smartfreq = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); decision(25, 0, 787200, 1171200, 0); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 12, -1, 0); control(1804800,691200,4,3,1,2419200,1056000,2,1,1,0,0,1,1,1,587000000,305000000,1,1,1,-1); decision(26, 2, 0, 0, 0); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((fg == 1) && (perfmode == 2) && (game_started == 1)) { decision(26, 2, 1, 0, 0); } if ((need_update_smartfreq == 1) && (game_started == 1)) { if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); } need_update_smartfreq = 0;"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; print target_fps; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; } if (_fg == 1) { decision(25, 0, 787200, 1171200, 0); need_update_smartfreq = 1; } if (_fg == 0) { decision(25, -1, -1, -1, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if (_7 > 29) { target_fps = _7; need_update_smartfreq = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); decision(25, 0, 787200, 1171200, 0); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 12, -1, 0); control(1804800,691200,4,3,1,2419200,1056000,2,1,1,0,0,1,1,1,587000000,305000000,1,1,1,-1); decision(26, 2, 0, 0, 0); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((fg == 1) && (perfmode == 2) && (game_started == 1)) { decision(26, 2, 1, 0, 0); } if ((need_update_smartfreq == 1) && (game_started == 1)) { if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); } need_update_smartfreq = 0;"
            },
            "com.tencent.af": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { decision(1, 13, 0, 0, 0); loading = 0; } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.tencent.aft": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { decision(1, 13, 0, 0, 0); loading = 0; } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.netease.lztg.nearme.gamecenter": {
                "enable":1,
                "rules":"print ^sceneId; print _sceneId; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); } if (_sceneId == 30900) { decision(15, 1, 0, 0 ,0); } if (_sceneId == 20300) { decision(15, 2, 0, 0 ,0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); }"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { decision(17, -1, 10, 2, 0); } else if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else if (perfmode == 2) { decision(17, -1, 20, 2, 0);; } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster":"Thread-2",
                    "rules": "if (_fg == 1) {decision(14, 1, 3000, 0, 0); decision(8, 97, 0, 0, 0);decision(25, 0, 787200, 1171200, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);decision(25, -1, -1, -1, 0);decision(26, 2, 0, 0, 0);}"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0); decision(8, 97, 0, 0, 0);decision(25, 0, 787200, 1171200, 0); decision(26, 2, 2, 0, 0);} if (_fg == 0) { decision(21, 0, 0, 0, 0); decision(8, 48, 0, 0, 0);decision(25, -1, -1, -1, 0);decision(26, 2, 0, 0, 0);}"
                },
                "com.netease.hyxd": {
                    "enable" : 1,
                    "rules": "if (_fg == 1) { decision(17, -1, 20, 3, 0); }"
                },
                "com.superevilmegacorp.game": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.superevilmegacorp.game.nearme.gamecenter": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game.nearme.gamecenter/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.tencent.ig": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.af": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {control(1804800,403200,4,4,1,2246400,710400,3,3,1,2553600,844800,1,1,1,587000000,305000000,1,1,1,12);} if (_fg == 0) {control(1804800,403200,4,4,1,2054400,710400,3,3,1,2361600,844800,1,1,1,587000000,305000000,1,1,1,-1);}"
                },
                "com.tencent.tmgp.speedmobile": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {control(1804800,403200,4,4,1,2246400,710400,3,3,1,2553600,844800,1,1,1,587000000,305000000,1,1,1,12);} if (_fg == 0) {control(1804800,403200,4,4,1,2054400,710400,3,3,1,2361600,844800,1,1,1,587000000,305000000,1,1,1,-1);decision(26, 2, 0, 0, 0);}"
                }
            }
        }
    },
    "SDM7225": {
        "gpu_freq_table_path": "/sys/devices/platform/soc/3d00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/freq_table_mhz",
        "gpu_freq_stat_path": "/sys/devices/platform/soc/3d00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/gpu_clock_stats",
        "brightness_path":"/sys/devices/platform/soc/ae00000.qcom,mdss_mdp/backlight/panel0-backlight/brightness",
        "sdk": {
            "com.tencent.tmgp.pubgmhd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^perfmode == 0) && (_perfmode == 0)) { need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; if (target_fps > 60){ decision(26, 2, 1, 0, 0); } else { decision(26, 2, 0, 0, 0); } } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2419200,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 4, 12, 77, target_fps); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,403200,4,4,1,2419200,825600,3,3,1,2745600,1075200,1,1,1,587000000,400000000,1,1,1,-1); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); decision(26, 2, 0, 0, 0); need_update = 0; decision(20, 0, 12, 77, target_fps); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 2) { decision(26, 2, 1, 0, 0); } decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,403200,4,4,1,1958400,710400,3,3,1,1977600,844800,1,1,1,587000000,305000000,1,1,1,12); } else { if (target_fps >= 60) { if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,1171200,3,3,1,2841600,1075200,1,1,1,587000000,400000000,1,1,1,12); } else { if (target_quality > 4) { control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } control(1804800,403200,4,4,1,2246400,1056000,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1670400,710400,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,710400,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.tencent.tmgp.pubgmhdce":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^perfmode == 0) && (_perfmode == 0)) { need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; if (target_fps > 60){ decision(26, 2, 1, 0, 0); } else { decision(26, 2, 0, 0, 0); } } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2419200,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 4, 12, 77, target_fps); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,403200,4,4,1,2419200,825600,3,3,1,2745600,1075200,1,1,1,587000000,400000000,1,1,1,-1); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); decision(26, 2, 0, 0, 0); need_update = 0; decision(20, 0, 12, 77, target_fps); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 2) { decision(26, 2, 1, 0, 0); } decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,403200,4,4,1,1958400,710400,3,3,1,1977600,844800,1,1,1,587000000,305000000,1,1,1,12); } else { if (target_fps >= 60) { if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,1171200,3,3,1,2841600,1075200,1,1,1,587000000,400000000,1,1,1,12); } else { if (target_quality > 4) { control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } control(1804800,403200,4,4,1,2246400,1056000,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1670400,710400,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,710400,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.tencent.ig":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((^perfmode == 0) && (_perfmode == 0)) { need_update = 1; } if (_54 != -1) { if (_54 != antialiase) { antialiase = _54; need_update = 1; } } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update_smartfreq = 1; } if (_7 != -1) { if (target_fps != _7) { target_fps = _7; need_update = 1; if (target_fps > 60){ decision(26, 2, 1, 0, 0); } else { decision(26, 2, 0, 0, 0); } } need_update_smartfreq = 1; } if (_8 != -1) { target_quality = _8; need_update = 1; } if ((_sceneId >= 100) && (game_started != 1)) { game_started = 1; control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2419200,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); decision(9, 0, 0, 0, 0); decision(13, 98, 92, 0, 0); decision(20, 4, 12, 77, target_fps); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } need_update = 1; } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; final_table = 0; decision(9, 1, 0, 0, 0); control(1804800,403200,4,4,1,2419200,825600,3,3,1,2745600,1075200,1,1,1,587000000,400000000,1,1,1,-1); decision(1,15,5000,0,0); decision(17, -1, 0, 0, 0); decision(26, 2, 0, 0, 0); need_update = 0; decision(20, 0, 12, 77, target_fps); } if ((^sceneId != 5) && (_sceneId == 5)) { loading = 1; decision(1,15,15000,0,0); decision(9,2,0,0,0); } if ((loading == 1) && (_sceneId != 5) && (_sceneId != -1)) { loading = 0; decision(1,15,0,0,0); decision(9,3,0,0,0); } if ((^sceneId != 102) && (_sceneId == 102)) { jump = 1; need_update = 1; } if ((jump==1) && (_sceneId != 102) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((final_table != 1) && ((_sceneId == 104) || (_sceneId == 106) || (_sceneId == 108))) { final_table = 1; need_update = 1; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 2) { decision(26, 2, 1, 0, 0); } decision(1,15,2000,0,0); if (perfmode == 1) { decision(17, -1, 0, 0, 0); decision(20, 0, 1, 12, 0); control(1804800,403200,4,4,1,1958400,710400,3,3,1,1977600,844800,1,1,1,587000000,305000000,1,1,1,12); } else { if (target_fps >= 60) { if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,1171200,3,3,1,2841600,1075200,1,1,1,587000000,400000000,1,1,1,12); } else { if (target_quality > 4) { control(1516800,403200,4,4,1,1862400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); } control(1804800,403200,4,4,1,2246400,1056000,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } if (jump == 1) { decision(17, -1, 50, -1, 0); } else if (final_table == 1) { decision(17, -1, 30, 1, 0); } else { if (perfmode == 2) { decision(17, -1, 30, 1, 0); } else if (antialiase == 0) { decision(17, -1, 30, 3, 0); } else { decision(17, -1, 0, 0, 0); } } } else if (target_fps >= 40) { if (jump == 1 || final_table == 1) { decision(17, -1, 20, -1, 0); } else { decision(17, -1, 0, 0, 0); } if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1766400,825600,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,825600,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } else { decision(17, -1, 0, 0, 0); if (perfmode == 2) { control(1804800,403200,4,4,1,2419200,940800,3,3,1,2745600,960000,1,1,1,587000000,305000000,1,1,1,12); } else { control(1516800,403200,4,4,1,1670400,710400,3,3,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,403200,4,4,1,2054400,710400,3,3,1,0,0,0,0,0,587000000,400000000,1,1,1,100); } } } } if ((need_update_smartfreq == 1) && (game_started == 1)) { decision(20, 4, 12, 77, target_fps); } need_update = 0; need_update_smartfreq = 0;"
            },
            "com.netease.hyxd.nearme.gamecenter":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.netease.hyxd":{
                "rules": "print ^sceneId; print _sceneId; print ^fps; print _fps; print game_started; perfmode = ^perfmode; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 15, 20000, 0, 0); login = 1; } if ((login == 1) && (_sceneId != -1) && (_sceneId != 3)) { decision(1, 15, 0, 0, 0); login = 0; } if ((^sceneId != 5) && (_sceneId == 5)) { loading=1; decision(1, 13, 15000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId != 6) && (_sceneId == 6)) { loading=0; decision(9, 3, 0, 0, 0); game_started = 1; decision(8, 97, 0, 0, 0); decision(9, 0, 0, 0, 0); decision(20, 1, 1, 12, 0); need_update = 1; } if ((jump != 1) && (_sceneId == 100)) { jump = 1; need_update = 1; } if ((jump == 1) && (_sceneId != 100) && (_sceneId != -1)) { jump = 0; need_update = 1; } if ((drive != 1) && (_sceneId == 103)) { drive = 1; need_update = 1; } if ((drive == 1) && (_sceneId != 103) && (_sceneId != -1)) { drive = 0; need_update = 1; } if ((game_started == 1) && ((_sceneId == 20)|| (_sceneId == 4))) { game_started = 0; jump = 0; drive == 0; decision(9, 1, 0, 0, 0); decision(8, 48, 0, 0, 0); decision(20, 0, 1, 0, 0); decision(1, 15, 5000, 0, 0); decision(17, -1, 0, 0, 0); need_update = 0; } if ((^perfmode != _perfmode) && (_perfmode != -1) && (game_started == 1)) { perfmode = _perfmode; need_update = 1; } if (_targetFPS != -1) { if (target_fps != _targetFPS) { target_fps = _targetFPS; need_update = 1; } } if ((game_started == 1) && (need_update == 1) && (fg == 1)) { if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else { if (target_fps >= 60) { if ((drive == 1) || (jump == 1)) { decision(17, -1, 30, 2, 0); } else { if (perfmode == 2) { decision(17, -1, 25, 2, 0); } else { decision(17, -1, 25, 3, 0); } } } } } need_update = 0;"
            },
            "com.tencent.tmgp.speedmobile": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; print target_fps; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; } if (_fg == 1) { decision(25, 0, 787200, 1171200, 0); need_update_smartfreq = 1; } if (_fg == 0) { decision(25, -1, -1, -1, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if (_7 > 29) { target_fps = _7; need_update_smartfreq = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); decision(25, 0, 787200, 1171200, 0); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 12, -1, 0); control(1804800,691200,4,3,1,2419200,1056000,2,1,1,0,0,1,1,1,587000000,305000000,1,1,1,-1); decision(26, 2, 0, 0, 0); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((fg == 1) && (perfmode == 2) && (game_started == 1)) { decision(26, 2, 1, 0, 0); } if ((need_update_smartfreq == 1) && (game_started == 1)) { if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); } need_update_smartfreq = 0;"
            },
            "com.tencent.tmgp.speedmobileEx": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; print target_fps; perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; } if (_fg == 1) { decision(25, 0, 787200, 1171200, 0); need_update_smartfreq = 1; } if (_fg == 0) { decision(25, -1, -1, -1, 0); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if (_7 > 29) { target_fps = _7; need_update_smartfreq = 1; } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if ((^sceneId != 5) && (_sceneId == 5)) { decision(1, 12, 10000, 0, 0); decision(9, 2, 0, 0, 0); } if ((^sceneId == 5) && (_sceneId != 5) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); decision(9, 3, 0, 0, 0); } if (((_sceneId == 7) || (_sceneId == 101)) && (game_started != 1)) { game_started = 1; decision(9, 0, 0, 0, 0); if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); decision(25, 0, 787200, 1171200, 0); if (perfmode == 2) { decision(26, 2, 1, 0, 0); } } if ((game_started == 1) && (_sceneId != 7) && (_sceneId != 101) && (_sceneId != -1)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(20, 0, 12, -1, 0); control(1804800,691200,4,3,1,2419200,1056000,2,1,1,0,0,1,1,1,587000000,305000000,1,1,1,-1); decision(26, 2, 0, 0, 0); } if ((^sceneId != 101) && (_sceneId == 101)) { ; } if ((^sceneId == 101) && (_sceneId != 101) && (_sceneId != -1)) { ; } if (_tid != -1) { decision(14, 1, 2000, 3, _tid); } if ((fg == 1) && (perfmode == 2) && (game_started == 1)) { decision(26, 2, 1, 0, 0); } if ((need_update_smartfreq == 1) && (game_started == 1)) { if (target_fps < 90) { control(1516800,691200,4,3,1,1382400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,1958400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } else { control(1516800,691200,4,3,1,1574400,1056000,3,2,1,0,0,0,0,0,490000000,305000000,1,1,1,99); control(1804800,691200,4,3,1,2054400,1056000,3,2,1,0,0,0,0,0,587000000,305000000,1,1,1,100); } decision(20, 3, 12, 70, target_fps); } need_update_smartfreq = 0;"
            },
            "com.tencent.af": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { decision(1, 13, 0, 0, 0); loading = 0; } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.tencent.aft": {
                "rules": " print ^sceneId; print _sceneId; print ^fps; print _fps; if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } if ((^sceneId != 3) && (_sceneId == 3)) { decision(1, 12, 20000, 0, 0); } if ((^sceneId == 3) && (_sceneId != 3) && (_sceneId != -1)) { decision(1, 12, 0, 0, 0); } if (_sceneId == 5 && loading != 1) { loading = 1; decision(1, 13, 10000, 0, 0); } if (loading == 1 && _sceneId != 5) { decision(1, 13, 0, 0, 0); loading = 0; } if (_44 != -1) { decision(15, _44, 0, 0 ,0); } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); decision(17, -1, 100, 12, 0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); decision(17, -1, 0, 0, 0); }"
            },
            "com.netease.lztg.nearme.gamecenter": {
                "enable":1,
                "rules":"print ^sceneId; print _sceneId; fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; } if (_sceneId == 7 && game_started != 1) { game_started = 1; decision(9, 0, 0, 0, 0); } if (_sceneId == 30900) { decision(15, 1, 0, 0 ,0); } if (_sceneId == 20300) { decision(15, 2, 0, 0 ,0); } if ((game_started == 1) && (_sceneId == 4)) { game_started = 0; decision(9, 1, 0, 0, 0); }"
            },
            "connectionless": {
                "com.tencent.tmgp.pubgm": {
                    "enable":1,
                    "rules":"if(_fg == 1) { decision(14, 1, 5000, 0, 0); decision(8, 97, 0, 0, 0); } else if (_fg == 0) { decision(8, 48, 0, 0, 0); } if (_tid != -1) { decision(14, 1, 20000, 2, _tid); } fg = ^fg; if ((_fg != ^fg) && (_fg != -1)) { fg = _fg; need_update = 1; } perfmode = ^perfmode; if ((^perfmode != _perfmode) && (_perfmode != -1)) { perfmode = _perfmode; need_update = 1; } if ((fg == 1) && (need_update == 1)) { if (perfmode == 0) { decision(17, -1, 10, 2, 0); } else if (perfmode == 1) { decision(17, -1, 0, 0, 0); } else if (perfmode == 2) { decision(17, -1, 20, 2, 0);; } } need_update = 0;",
                    "cluster":"OcingWorker"
                },
                "com.tencent.tmgp.pubgmhd": {
                    "enable": 1,
                    "cluster":"Thread-2",
                    "rules": "if (_fg == 1) {decision(14, 1, 3000, 0, 0); decision(8, 97, 0, 0, 0);decision(25, 0, 787200, 1171200, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);decision(25, -1, -1, -1, 0);decision(26, 2, 0, 0, 0);}"
                },
                "com.mobile.legends": {
                    "enable":1,
                    "rules": "if (_fg == 1) {decision(1,12,30000,0,0); sleep(2000); decision(10,18,0,0,0);} if (_fg == 0) {decision(1,12,0,0,0);}"
                },
                "com.jiguang.dtszj.nearme.gamecenter": {
                    "enable":1,
                    "cluster": "BackgroundWorke",
                    "rules": "if (_fg == 1) {decision(14, 2, 8000, 0, 0);}"
                },
                "com.sixjoy.warsong1": {
                    "enable":1
                },
                "com.tencent.tmgp.sgame" : {
                    "enable":1,
                    "cluster": "NativeThread",
                    "rules": "if (_fg == 1) {decision(21, 1, 0, 0, 0); decision(8, 97, 0, 0, 0);decision(25, 0, 787200, 1171200, 0); decision(26, 2, 2, 0, 0);} if (_fg == 0) { decision(21, 0, 0, 0, 0); decision(8, 48, 0, 0, 0);decision(25, -1, -1, -1, 0);decision(26, 2, 0, 0, 0);}"
                },
                "com.netease.hyxd": {
                    "enable" : 1,
                    "rules": "if (_fg == 1) { decision(17, -1, 20, 3, 0); }"
                },
                "com.superevilmegacorp.game": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.superevilmegacorp.game.nearme.gamecenter": {
                    "enable" : 1,
                    "layer": "SurfaceView - com.superevilmegacorp.game.nearme.gamecenter/com.superevilmegacorp.nuogameentry.NuoActivityGame#0",
                    "rules": "if (_fg == 1) { decision(17, -1, 100, 8, 0); } if (_fg == 0) { decision(17, -1, 0, 0, 0); }"
                },
                "com.tencent.ig": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {decision(8, 97, 0, 0, 0);} if (_fg == 0) {decision(8, 48, 0, 0, 0);}"
                },
                "com.tencent.af": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {control(1804800,403200,4,4,1,2246400,710400,3,3,1,2553600,844800,1,1,1,587000000,305000000,1,1,1,12);} if (_fg == 0) {control(1804800,403200,4,4,1,2054400,710400,3,3,1,2361600,844800,1,1,1,587000000,305000000,1,1,1,-1);}"
                },
                "com.tencent.tmgp.speedmobile": {
                    "enable": 1,
                    "rules": "if (_fg == 1) {control(1804800,403200,4,4,1,2246400,710400,3,3,1,2553600,844800,1,1,1,587000000,305000000,1,1,1,12);} if (_fg == 0) {control(1804800,403200,4,4,1,2054400,710400,3,3,1,2361600,844800,1,1,1,587000000,305000000,1,1,1,-1);decision(26, 2, 0, 0, 0);}"
                }
            }
        }
    }
}
